/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/**
 * Load a CLAP plugin
 *
 * @param path - Path to .clap file
 * @param plugin_index - Index of plugin in bundle (usually 0)
 * @returns Plugin handle for future operations
*/
export declare function loadPlugin(path: string, pluginIndex?: number | undefined | null): number
/**
 * Unload a CLAP plugin
*/
export declare function unloadPlugin(handle: number): void
/**
 * Get plugin descriptor
*/
export interface PluginDescriptorJs {
  id: string
  name: string
  vendor: string
  version: string
  description: string
  features: Array<string>
}
export declare function getDescriptor(handle: number): PluginDescriptorJs
/**
 * Initialize plugin
*/
export declare function initialize(handle: number): boolean
/**
 * Activate plugin for processing
*/
export declare function activate(handle: number, sampleRate: number, minFrames: number, maxFrames: number): boolean
/**
 * Deactivate plugin
*/
export declare function deactivate(handle: number): void
/**
 * Start processing
*/
export declare function startProcessing(handle: number): boolean
/**
 * Stop processing
*/
export declare function stopProcessing(handle: number): void
/**
 * Get parameter count
*/
export declare function getParameterCount(handle: number): number
/**
 * Parameter info for JavaScript
*/
export interface ParameterInfoJs {
  id: number
  name: string
  module: string
  minValue: number
  maxValue: number
  defaultValue: number
}
/**
 * Get parameter info
*/
export declare function getParameterInfo(handle: number, index: number): ParameterInfoJs
/**
 * Get parameter value
*/
export declare function getParameterValue(handle: number, paramId: number): number
/**
 * Set parameter value
*/
export declare function setParameterValue(handle: number, paramId: number, value: number): void
/**
 * Get latency in samples
*/
export declare function getLatency(handle: number): number
