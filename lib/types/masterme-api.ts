/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/master/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Request AI mastering for a mixed track */
        post: operations["requestMastering"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/master/{masterId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check mastering job status */
        get: operations["getMasteringStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/master/{masterId}/download": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Download completed mastered track */
        get: operations["downloadMasteredTrack"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/master/{masterId}/report": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get detailed mastering report with before/after analysis */
        get: operations["getMasteringReport"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/master/presets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get available mastering presets by genre */
        get: operations["getMasteringPresets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/master/analyze": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Analyze mixed track before mastering */
        post: operations["analyzeMix"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        MasteringJob: {
            /** @example mst_01JBNCX8QF0A1Z2Y3X4W5V6U7T */
            master_id: string;
            track_id: string;
            user_id?: string;
            journey_id?: string;
            /** @enum {string} */
            status: "queued" | "processing" | "completed" | "failed";
            progress_percentage?: number;
            /** Format: uri */
            input_audio_url?: string;
            /** Format: uri */
            output_audio_url?: string;
            /** Format: float */
            target_loudness_lufs?: number;
            target_genre?: string;
            mastering_style?: string;
            processing_steps?: components["schemas"]["ProcessingStep"][];
            metrics?: components["schemas"]["MasteringMetrics"];
            quality_report?: components["schemas"]["QualityReport"];
            error_message?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            completed_at?: string;
            /** Format: float */
            processing_time_sec?: number;
        };
        ProcessingStep: {
            /** @enum {string} */
            step?: "analysis" | "eq" | "multiband_compression" | "stereo_enhancement" | "limiting" | "dithering";
            description?: string;
            reason?: string;
            parameters?: {
                [key: string]: unknown;
            };
        };
        MasteringMetrics: {
            /**
             * Format: float
             * @description Input integrated loudness
             */
            input_lufs?: number;
            /**
             * Format: float
             * @description Output integrated loudness
             */
            output_lufs?: number;
            /**
             * Format: float
             * @description Dynamic range in Loudness Units
             */
            dynamic_range_lu?: number;
            /**
             * Format: float
             * @description True peak level in dBTP
             */
            true_peak_dbtp?: number;
            /** Format: float */
            crest_factor_db?: number;
            /** Format: float */
            stereo_width?: number;
        };
        QualityReport: {
            overall_score?: number;
            /** @enum {string} */
            frequency_balance?: "poor" | "fair" | "good" | "excellent";
            /** @enum {string} */
            dynamic_range?: "poor" | "fair" | "good" | "excellent";
            /** @enum {string} */
            loudness_consistency?: "poor" | "fair" | "good" | "excellent";
            /** @enum {string} */
            stereo_image?: "poor" | "fair" | "good" | "excellent";
            warnings?: string[];
            recommendations?: string[];
        };
        ReferenceTrack: {
            artist?: string;
            song?: string;
            /** Format: uri */
            audio_url?: string;
            /** Format: float */
            analyzed_loudness_lufs?: number;
            /** Format: float */
            analyzed_dynamic_range?: number;
        };
        CustomMasteringSettings: {
            /** @default true */
            enable_eq: boolean;
            /** @default true */
            enable_compression: boolean;
            /** @default false */
            enable_stereo_enhancement: boolean;
            /** @default false */
            enable_harmonic_exciter: boolean;
            /**
             * Format: float
             * @default -0.5
             */
            limiter_ceiling_db: number;
            /**
             * @description Prioritize dynamic range over loudness
             * @default false
             */
            preserve_dynamics: boolean;
        };
        MasteringReport: {
            master_id?: string;
            track_id?: string;
            before_analysis?: components["schemas"]["MixAnalysis"];
            after_analysis?: components["schemas"]["MixAnalysis"];
            processing_steps?: components["schemas"]["ProcessingStep"][];
            improvements?: {
                metric?: string;
                before?: number;
                after?: number;
                change_percentage?: number;
            }[];
            /**
             * Format: uri
             * @description URL to visual waveform before/after comparison
             */
            waveform_comparison_url?: string;
            /**
             * Format: uri
             * @description URL to visual spectrum before/after comparison
             */
            spectrum_comparison_url?: string;
        };
        MixAnalysis: {
            /** Format: float */
            loudness_lufs?: number;
            /** Format: float */
            loudness_range_lu?: number;
            /** Format: float */
            true_peak_dbtp?: number;
            /** Format: float */
            dynamic_range_db?: number;
            frequency_distribution?: {
                sub_bass?: number;
                bass?: number;
                low_mids?: number;
                mids?: number;
                high_mids?: number;
                highs?: number;
            };
            /** Format: float */
            stereo_width?: number;
            issues?: string[];
        };
        MasteringPreset: {
            preset_id?: string;
            name?: string;
            description?: string;
            genre?: string;
            /** Format: float */
            target_loudness_lufs?: number;
            style?: string;
            processing_steps?: components["schemas"]["ProcessingStep"][];
            /** Format: uri */
            example_audio_url?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    requestMastering: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    track_id: string;
                    user_id?: string;
                    journey_id?: string;
                    /**
                     * Format: uri
                     * @example s3://bucket/mixes/final_mix.wav
                     */
                    input_audio_url: string;
                    /**
                     * Format: float
                     * @description Target integrated loudness (LUFS)
                     * @default -14
                     */
                    target_loudness_lufs: number;
                    /** @enum {string} */
                    target_genre?: "country" | "pop" | "rock" | "r&b" | "indie" | "electronic" | "acoustic";
                    /**
                     * @default moderate
                     * @enum {string}
                     */
                    mastering_style?: "gentle" | "moderate" | "aggressive" | "streaming" | "vinyl" | "cd";
                    reference_track?: components["schemas"]["ReferenceTrack"];
                    custom_settings?: components["schemas"]["CustomMasteringSettings"];
                };
            };
        };
        responses: {
            /** @description Mastering job accepted and queued */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MasteringJob"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Rate limit exceeded */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getMasteringStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                masterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Mastering job status */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MasteringJob"];
                };
            };
            /** @description Mastering job not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    downloadMasteredTrack: {
        parameters: {
            query?: {
                format?: "wav" | "flac" | "mp3-320" | "mp3-v0";
            };
            header?: never;
            path: {
                masterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Mastered audio file */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "audio/wav": string;
                    "audio/flac": string;
                    "audio/mpeg": string;
                };
            };
            /** @description Mastered track not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Mastering job not complete yet */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getMasteringReport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                masterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Mastering report */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MasteringReport"];
                };
            };
        };
    };
    getMasteringPresets: {
        parameters: {
            query?: {
                genre?: "country" | "pop" | "rock" | "r&b" | "indie" | "electronic" | "acoustic";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of mastering presets */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MasteringPreset"][];
                };
            };
        };
    };
    analyzeMix: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** Format: uri */
                    audio_url: string;
                };
            };
        };
        responses: {
            /** @description Mix analysis results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MixAnalysis"];
                };
            };
        };
    };
}
