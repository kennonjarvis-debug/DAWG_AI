{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/lib/auth/session-provider.tsx"],"sourcesContent":["'use client'\n\n// Session provider for NextAuth.js\n// Wrap your app with this to enable authentication\nimport { SessionProvider as NextAuthSessionProvider } from 'next-auth/react';\nimport { ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport function SessionProvider({ children }: Props) {\n  return (\n    <NextAuthSessionProvider>\n      {children}\n    </NextAuthSessionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA,mCAAmC;AACnC,mDAAmD;AACnD;AAJA;;;AAWO,SAAS,gBAAgB,KAAmB;QAAnB,EAAE,QAAQ,EAAS,GAAnB;IAC9B,qBACE,2MAAC,kLAAuB;kBACrB;;;;;;AAGP;KANgB","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/src/core/AudioProvider.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useRef, ReactNode } from 'react';\n\ninterface AudioContextValue {\n  audioContext: AudioContext | null;\n  getAudioContext: () => AudioContext;\n}\n\nconst AudioContext = createContext<AudioContextValue | null>(null);\n\nexport function AudioProvider({ children }: { children: ReactNode }) {\n  const audioContextRef = useRef<AudioContext | null>(null);\n\n  // Initialize audio context on mount\n  useEffect(() => {\n    if (typeof window !== 'undefined' && !audioContextRef.current) {\n      audioContextRef.current = new window.AudioContext();\n    }\n\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  const getAudioContext = () => {\n    if (!audioContextRef.current) {\n      if (typeof window !== 'undefined') {\n        audioContextRef.current = new window.AudioContext();\n      } else {\n        throw new Error('AudioContext can only be created in browser');\n      }\n    }\n    return audioContextRef.current;\n  };\n\n  return (\n    <AudioContext.Provider\n      value={{\n        audioContext: audioContextRef.current,\n        getAudioContext,\n      }}\n    >\n      {children}\n    </AudioContext.Provider>\n  );\n}\n\nexport function useAudioContext() {\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error('useAudioContext must be used within AudioProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;AAFA;;AASA,MAAM,6BAAe,IAAA,4LAAa,EAA2B;AAEtD,SAAS,cAAc,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC5B,MAAM,kBAAkB,IAAA,qLAAM,EAAsB;IAEpD,oCAAoC;IACpC,IAAA,wLAAS;mCAAC;YACR,IAAI,aAAkB,eAAe,CAAC,gBAAgB,OAAO,EAAE;gBAC7D,gBAAgB,OAAO,GAAG,IAAI,OAAO,YAAY;YACnD;YAEA;2CAAO;oBACL,IAAI,gBAAgB,OAAO,EAAE;wBAC3B,gBAAgB,OAAO,CAAC,KAAK;oBAC/B;gBACF;;QACF;kCAAG,EAAE;IAEL,MAAM,kBAAkB;QACtB,IAAI,CAAC,gBAAgB,OAAO,EAAE;YAC5B,wCAAmC;gBACjC,gBAAgB,OAAO,GAAG,IAAI,OAAO,YAAY;YACnD;;QAGF;QACA,OAAO,gBAAgB,OAAO;IAChC;IAEA,qBACE,2MAAC,aAAa,QAAQ;QACpB,OAAO;YACL,cAAc,gBAAgB,OAAO;YACrC;QACF;kBAEC;;;;;;AAGP;GArCgB;KAAA;AAuCT,SAAS;;IACd,MAAM,UAAU,IAAA,yLAAU,EAAC;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}