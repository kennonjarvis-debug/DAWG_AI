{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/events.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Event types and Zod schemas for DAWG AI event bus\n * @owner Jerry (AI Conductor)\n */\n\nimport { z } from 'zod';\n\n// ============================================================================\n// Base Event Envelope\n// ============================================================================\n\nexport const EventEnvelopeSchema = z.object({\n  event: z.string(),\n  version: z.string().default('v1'),\n  id: z.string(),\n  trace_id: z.string(),\n  producer: z.string(),\n  ts: z.string().datetime(),\n  signature: z.string(),\n  payload: z.record(z.string(), z.any()),\n});\n\nexport type EventEnvelope<T = any> = {\n  event: string;\n  version: string;\n  id: string;\n  trace_id: string;\n  producer: string;\n  ts: string;\n  signature: string;\n  payload: T;\n};\n\n// ============================================================================\n// Journey Events (journey.*)\n// ============================================================================\n\nexport const VocalProfileSchema = z.object({\n  lowest_note: z.string(),\n  highest_note: z.string(),\n  range_semitones: z.number(),\n  skill_level: z.enum(['beginner', 'intermediate', 'advanced']),\n});\n\nexport const JourneyStartedPayloadSchema = z.object({\n  journey_id: z.string(),\n  user_id: z.string(),\n  journey_type: z.enum(['record_song', 'expand_range', 'improve_control', 'build_confidence']),\n  estimated_weeks: z.number(),\n  difficulty: z.enum(['easy', 'medium', 'hard']),\n  vocal_profile: VocalProfileSchema,\n});\n\nexport const StageCompletedPayloadSchema = z.object({\n  journey_id: z.string(),\n  stage_id: z.string(),\n  stage_name: z.string(),\n  completion_time_sec: z.number(),\n  next_stage_id: z.string().optional(),\n});\n\nexport const JourneyPausedPayloadSchema = z.object({\n  journey_id: z.string(),\n  reason: z.enum(['user_request', 'ai_recommendation', 'technical_issue']).optional(),\n});\n\nexport const JourneyResumedPayloadSchema = z.object({\n  journey_id: z.string(),\n  paused_duration_sec: z.number(),\n});\n\nexport const JourneyCompletedPayloadSchema = z.object({\n  journey_id: z.string(),\n  total_duration_sec: z.number(),\n  stages_completed: z.number(),\n  final_recording_id: z.string().optional(),\n});\n\nexport type VocalProfile = z.infer<typeof VocalProfileSchema>;\nexport type JourneyStartedPayload = z.infer<typeof JourneyStartedPayloadSchema>;\nexport type StageCompletedPayload = z.infer<typeof StageCompletedPayloadSchema>;\nexport type JourneyPausedPayload = z.infer<typeof JourneyPausedPayloadSchema>;\nexport type JourneyResumedPayload = z.infer<typeof JourneyResumedPayloadSchema>;\nexport type JourneyCompletedPayload = z.infer<typeof JourneyCompletedPayloadSchema>;\n\n// ============================================================================\n// Recording Events (recording.*)\n// ============================================================================\n\nexport const RecordingStartedPayloadSchema = z.object({\n  recording_id: z.string(),\n  journey_id: z.string(),\n  user_id: z.string(),\n  track_id: z.string(),\n  input_device: z.string(),\n});\n\nexport const RecordingStoppedPayloadSchema = z.object({\n  recording_id: z.string(),\n  duration_sec: z.number(),\n  file_size_bytes: z.number(),\n  sample_rate: z.number(),\n  format: z.enum(['wav', 'mp3', 'webm', 'opus']),\n});\n\nexport const TakesUploadedPayloadSchema = z.object({\n  recording_id: z.string(),\n  take_ids: z.array(z.string()),\n  take_count: z.number(),\n  total_size_bytes: z.number(),\n});\n\nexport const TakeSelectedPayloadSchema = z.object({\n  recording_id: z.string(),\n  selected_take_id: z.string(),\n  selection_reason: z.enum(['ai_recommendation', 'user_choice']),\n});\n\nexport type RecordingStartedPayload = z.infer<typeof RecordingStartedPayloadSchema>;\nexport type RecordingStoppedPayload = z.infer<typeof RecordingStoppedPayloadSchema>;\nexport type TakesUploadedPayload = z.infer<typeof TakesUploadedPayloadSchema>;\nexport type TakeSelectedPayload = z.infer<typeof TakeSelectedPayloadSchema>;\n\n// ============================================================================\n// AI Feedback Events (coach.*, comping.*, mix.*, master.*)\n// ============================================================================\n\nexport const CoachFeedbackPayloadSchema = z.object({\n  recording_id: z.string(),\n  timestamp_sec: z.number(),\n  detected_issue: z.enum([\n    'pitch_flat',\n    'pitch_sharp',\n    'timing_early',\n    'timing_late',\n    'breath_support',\n    'vowel_shape',\n    'vibrato',\n  ]),\n  severity: z.enum(['info', 'warning', 'critical']),\n  message: z.string(),\n  suggested_fix: z.string().optional(),\n});\n\nexport const CompingSuggestionPayloadSchema = z.object({\n  recording_id: z.string(),\n  take_ids: z.array(z.string()),\n  suggested_take_id: z.string(),\n  confidence_score: z.number().min(0).max(1),\n  reasoning: z.string(),\n});\n\nexport const MixSuggestionPayloadSchema = z.object({\n  recording_id: z.string(),\n  effect_chain: z.array(\n    z.object({\n      effect_type: z.enum(['eq', 'compression', 'reverb', 'delay', 'saturation', 'deesser']),\n      parameters: z.record(z.string(), z.number()),\n    })\n  ),\n  reasoning: z.string(),\n});\n\nexport const MasterCompletedPayloadSchema = z.object({\n  recording_id: z.string(),\n  mastered_file_url: z.string(),\n  lufs: z.number(),\n  peak_db: z.number(),\n  duration_sec: z.number(),\n});\n\nexport type CoachFeedbackPayload = z.infer<typeof CoachFeedbackPayloadSchema>;\nexport type CompingSuggestionPayload = z.infer<typeof CompingSuggestionPayloadSchema>;\nexport type MixSuggestionPayload = z.infer<typeof MixSuggestionPayloadSchema>;\nexport type MasterCompletedPayload = z.infer<typeof MasterCompletedPayloadSchema>;\n\n// ============================================================================\n// Task Events (tasks.*)\n// ============================================================================\n\nexport const TaskCreatedPayloadSchema = z.object({\n  task_id: z.string(),\n  title: z.string(),\n  owner: z.string(),\n  priority: z.enum(['P0', 'P1', 'P2', 'P3']),\n  estimate_days: z.number(),\n  dependencies: z.array(z.string()).optional(),\n});\n\nexport const TaskAssignedPayloadSchema = z.object({\n  task_id: z.string(),\n  assigned_to: z.string(),\n  assigned_by: z.string(),\n  deadline: z.string().datetime().optional(),\n});\n\nexport const TaskCompletedPayloadSchema = z.object({\n  task_ids: z.array(z.string()),\n  completed_items: z.array(z.string()),\n  completed_by: z.string(),\n});\n\nexport const TaskUpdatedPayloadSchema = z.object({\n  task_id: z.string(),\n  action: z.enum(['backlog_refined', 'priority_changed', 'blocked', 'unblocked']),\n  changes: z.record(z.string(), z.any()),\n});\n\nexport type TaskCreatedPayload = z.infer<typeof TaskCreatedPayloadSchema>;\nexport type TaskAssignedPayload = z.infer<typeof TaskAssignedPayloadSchema>;\nexport type TaskCompletedPayload = z.infer<typeof TaskCompletedPayloadSchema>;\nexport type TaskUpdatedPayload = z.infer<typeof TaskUpdatedPayloadSchema>;\n\n// ============================================================================\n// Agent Coordination Events (agent.*)\n// ============================================================================\n\nexport const AgentStatusUpdatePayloadSchema = z.object({\n  agent_id: z.string(),\n  agent_name: z.string(),\n  status: z.enum(['active', 'idle', 'blocked', 'offline']),\n  current_task: z.string().optional(),\n  progress: z.number().min(0).max(100),\n  health: z.enum(['healthy', 'degraded', 'critical']),\n  needs_help: z.boolean(),\n  available_to_help: z.boolean(),\n  computational_resources: z.object({\n    cpu_usage: z.number().min(0).max(100),\n    memory_usage: z.number().min(0).max(100),\n    available_capacity: z.number().min(0).max(100),\n  }),\n});\n\nexport const AgentHelpRequestedPayloadSchema = z.object({\n  request_id: z.string(),\n  requester: z.string(),\n  requester_name: z.string(),\n  issue: z.string(),\n  urgency: z.enum(['low', 'medium', 'high', 'critical']),\n  required_capabilities: z.array(z.string()).optional(),\n  context: z.record(z.string(), z.any()).optional(),\n});\n\nexport const AgentHelpClaimedPayloadSchema = z.object({\n  request_id: z.string(),\n  claimed_by: z.string(),\n  claimed_by_name: z.string(),\n});\n\nexport const AgentHelpResolvedPayloadSchema = z.object({\n  request_id: z.string(),\n  resolved_by: z.string(),\n  resolved_by_name: z.string(),\n  resolution_notes: z.string().optional(),\n});\n\nexport const AgentBuddyPairedPayloadSchema = z.object({\n  primary: z.string(),\n  buddy: z.string(),\n  focus: z.string(),\n});\n\nexport const AgentHeartbeatPayloadSchema = z.object({\n  agent_id: z.string(),\n  agent_name: z.string(),\n  status: z.enum(['active', 'idle', 'blocked', 'offline']),\n  health: z.enum(['healthy', 'degraded', 'critical']),\n});\n\nexport type AgentStatusUpdatePayload = z.infer<typeof AgentStatusUpdatePayloadSchema>;\nexport type AgentHelpRequestedPayload = z.infer<typeof AgentHelpRequestedPayloadSchema>;\nexport type AgentHelpClaimedPayload = z.infer<typeof AgentHelpClaimedPayloadSchema>;\nexport type AgentHelpResolvedPayload = z.infer<typeof AgentHelpResolvedPayloadSchema>;\nexport type AgentBuddyPairedPayload = z.infer<typeof AgentBuddyPairedPayloadSchema>;\nexport type AgentHeartbeatPayload = z.infer<typeof AgentHeartbeatPayloadSchema>;\n\n// ============================================================================\n// Metrics Events (metrics.*)\n// ============================================================================\n\nexport const MetricSchema = z.object({\n  name: z.string(),\n  value: z.number(),\n  unit: z.string(),\n  tags: z.record(z.string(), z.string()).optional(),\n});\n\nexport const MetricsTickPayloadSchema = z.object({\n  metrics: z.array(MetricSchema),\n  period_sec: z.number(),\n  timestamp: z.string().datetime(),\n});\n\nexport type Metric = z.infer<typeof MetricSchema>;\nexport type MetricsTickPayload = z.infer<typeof MetricsTickPayloadSchema>;\n\n// ============================================================================\n// Alerts Events (alerts.*)\n// ============================================================================\n\nexport const AlertInfoPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string().optional(),\n  feature: z.string().optional(),\n  metadata: z.record(z.string(), z.any()).optional(),\n});\n\nexport const AlertWarningPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string(),\n  severity: z.enum(['low', 'medium', 'high']),\n  action_required: z.boolean(),\n});\n\nexport const AlertErrorPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string(),\n  error_code: z.string(),\n  stack_trace: z.string().optional(),\n  recovery_attempted: z.boolean(),\n});\n\nexport type AlertInfoPayload = z.infer<typeof AlertInfoPayloadSchema>;\nexport type AlertWarningPayload = z.infer<typeof AlertWarningPayloadSchema>;\nexport type AlertErrorPayload = z.infer<typeof AlertErrorPayloadSchema>;\n\n// ============================================================================\n// Conductor Events (conductor.*)\n// ============================================================================\n\nexport const ConductorPlanUpdatedPayloadSchema = z.object({\n  msg: z.string(),\n  plan_version: z.string(),\n  contracts: z.object({\n    event_schemas: z.array(z.string()),\n    openapi_specs: z.array(z.string()),\n    grpc_protos: z.array(z.string()),\n    e2e_tests: z.array(z.string()).optional(),\n  }),\n  capabilities: z.array(z.string()),\n  links: z.record(z.string(), z.string()),\n});\n\nexport type ConductorPlanUpdatedPayload = z.infer<typeof ConductorPlanUpdatedPayloadSchema>;\n\n// ============================================================================\n// Code Events (code.*)\n// ============================================================================\n\nexport const CodeDiffProposedPayloadSchema = z.object({\n  task_id: z.string(),\n  branch: z.string(),\n  diff: z.string(),\n  tests: z.object({\n    passed: z.number(),\n    failed: z.number(),\n  }),\n  coverage: z.object({\n    lines: z.number(),\n  }),\n  notes: z.string().optional(),\n});\n\nexport const CodeReviewCompletedPayloadSchema = z.object({\n  task_id: z.string(),\n  review_type: z.string(),\n  files_analyzed: z.number(),\n  issues_found: z.record(z.string(), z.number()),\n  report_location: z.string(),\n  key_findings: z.array(z.string()),\n  recommendations: z.record(z.string(), z.string()),\n  estimated_effort: z.string(),\n});\n\nexport type CodeDiffProposedPayload = z.infer<typeof CodeDiffProposedPayloadSchema>;\nexport type CodeReviewCompletedPayload = z.infer<typeof CodeReviewCompletedPayloadSchema>;\n\n// ============================================================================\n// UI Events (ui.*)\n// ============================================================================\n\nexport const UIThemeChangedPayloadSchema = z.object({\n  theme: z.enum(['light', 'dark', 'system']),\n  previous_theme: z.enum(['light', 'dark', 'system']),\n  user_id: z.string().optional(),\n});\n\nexport const UIWidgetMountedPayloadSchema = z.object({\n  widget_id: z.string(),\n  widget_type: z.string(),\n  parent_id: z.string().optional(),\n  props: z.record(z.string(), z.any()).optional(),\n});\n\nexport const UIWidgetUnmountedPayloadSchema = z.object({\n  widget_id: z.string(),\n  widget_type: z.string(),\n  duration_ms: z.number(),\n});\n\nexport const UILayoutResizedPayloadSchema = z.object({\n  viewport_width: z.number(),\n  viewport_height: z.number(),\n  breakpoint: z.enum(['xs', 'sm', 'md', 'lg', 'xl', '2xl']),\n  previous_breakpoint: z.enum(['xs', 'sm', 'md', 'lg', 'xl', '2xl']).optional(),\n});\n\nexport const UIRouteChangedPayloadSchema = z.object({\n  from: z.string(),\n  to: z.string(),\n  query_params: z.record(z.string(), z.string()).optional(),\n});\n\nexport const UIModalOpenedPayloadSchema = z.object({\n  modal_id: z.string(),\n  modal_type: z.string(),\n  trigger: z.enum(['user', 'system', 'error']),\n});\n\nexport const UIModalClosedPayloadSchema = z.object({\n  modal_id: z.string(),\n  modal_type: z.string(),\n  action: z.enum(['confirm', 'cancel', 'close', 'backdrop']),\n  duration_ms: z.number(),\n});\n\nexport const UINotificationShownPayloadSchema = z.object({\n  notification_id: z.string(),\n  type: z.enum(['info', 'success', 'warning', 'error']),\n  message: z.string(),\n  duration_ms: z.number().optional(),\n});\n\nexport const UIErrorDisplayedPayloadSchema = z.object({\n  error_id: z.string(),\n  error_type: z.string(),\n  message: z.string(),\n  stack: z.string().optional(),\n  component: z.string().optional(),\n});\n\nexport type UIThemeChangedPayload = z.infer<typeof UIThemeChangedPayloadSchema>;\nexport type UIWidgetMountedPayload = z.infer<typeof UIWidgetMountedPayloadSchema>;\nexport type UIWidgetUnmountedPayload = z.infer<typeof UIWidgetUnmountedPayloadSchema>;\nexport type UILayoutResizedPayload = z.infer<typeof UILayoutResizedPayloadSchema>;\nexport type UIRouteChangedPayload = z.infer<typeof UIRouteChangedPayloadSchema>;\nexport type UIModalOpenedPayload = z.infer<typeof UIModalOpenedPayloadSchema>;\nexport type UIModalClosedPayload = z.infer<typeof UIModalClosedPayloadSchema>;\nexport type UINotificationShownPayload = z.infer<typeof UINotificationShownPayloadSchema>;\nexport type UIErrorDisplayedPayload = z.infer<typeof UIErrorDisplayedPayloadSchema>;\n\n// ============================================================================\n// Event Topic Constants\n// ============================================================================\n\nexport const EventTopics = {\n  // Journey\n  JOURNEY_STARTED: 'journey.started',\n  STAGE_COMPLETED: 'stage.completed',\n  JOURNEY_PAUSED: 'journey.paused',\n  JOURNEY_RESUMED: 'journey.resumed',\n  JOURNEY_COMPLETED: 'journey.completed',\n\n  // Recording\n  RECORDING_STARTED: 'recording.started',\n  RECORDING_STOPPED: 'recording.stopped',\n  TAKES_UPLOADED: 'recording.takes.uploaded',\n  TAKE_SELECTED: 'recording.take.selected',\n\n  // AI Feedback\n  COACH_FEEDBACK: 'coach.feedback',\n  COMPING_SUGGESTION: 'comping.suggestion',\n  MIX_SUGGESTION: 'mix.suggestion',\n  MASTER_COMPLETED: 'master.completed',\n\n  // Tasks\n  TASK_CREATED: 'tasks.created',\n  TASK_ASSIGNED: 'tasks.assigned',\n  TASK_COMPLETED: 'tasks.completed',\n  TASK_UPDATED: 'tasks.updated',\n\n  // Agent Coordination\n  AGENT_STATUS_UPDATE: 'agent.status.update',\n  AGENT_HELP_REQUESTED: 'agent.help.requested',\n  AGENT_HELP_CLAIMED: 'agent.help.claimed',\n  AGENT_HELP_RESOLVED: 'agent.help.resolved',\n  AGENT_BUDDY_PAIRED: 'agent.buddy.paired',\n  AGENT_HEARTBEAT: 'agent.heartbeat',\n\n  // Metrics\n  METRICS_TICK: 'metrics.tick',\n\n  // Alerts\n  ALERT_INFO: 'alerts.info',\n  ALERT_WARNING: 'alerts.warning',\n  ALERT_ERROR: 'alerts.error',\n\n  // Conductor\n  CONDUCTOR_PLAN_UPDATED: 'conductor.plan.updated',\n\n  // Code\n  CODE_DIFF_PROPOSED: 'code.diff.proposed',\n  CODE_REVIEW_COMPLETED: 'code.review.completed',\n\n  // UI Events\n  UI_THEME_CHANGED: 'ui.theme.changed',\n  UI_WIDGET_MOUNTED: 'ui.widget.mounted',\n  UI_WIDGET_UNMOUNTED: 'ui.widget.unmounted',\n  UI_LAYOUT_RESIZED: 'ui.layout.resized',\n  UI_ROUTE_CHANGED: 'ui.route.changed',\n  UI_MODAL_OPENED: 'ui.modal.opened',\n  UI_MODAL_CLOSED: 'ui.modal.closed',\n  UI_NOTIFICATION_SHOWN: 'ui.notification.shown',\n  UI_ERROR_DISPLAYED: 'ui.error.displayed',\n} as const;\n\nexport type EventTopic = (typeof EventTopics)[keyof typeof EventTopics];\n\n// ============================================================================\n// Event Payload Type Map\n// ============================================================================\n\nexport type EventPayloadMap = {\n  // Journey\n  [EventTopics.JOURNEY_STARTED]: JourneyStartedPayload;\n  [EventTopics.STAGE_COMPLETED]: StageCompletedPayload;\n  [EventTopics.JOURNEY_PAUSED]: JourneyPausedPayload;\n  [EventTopics.JOURNEY_RESUMED]: JourneyResumedPayload;\n  [EventTopics.JOURNEY_COMPLETED]: JourneyCompletedPayload;\n\n  // Recording\n  [EventTopics.RECORDING_STARTED]: RecordingStartedPayload;\n  [EventTopics.RECORDING_STOPPED]: RecordingStoppedPayload;\n  [EventTopics.TAKES_UPLOADED]: TakesUploadedPayload;\n  [EventTopics.TAKE_SELECTED]: TakeSelectedPayload;\n\n  // AI Feedback\n  [EventTopics.COACH_FEEDBACK]: CoachFeedbackPayload;\n  [EventTopics.COMPING_SUGGESTION]: CompingSuggestionPayload;\n  [EventTopics.MIX_SUGGESTION]: MixSuggestionPayload;\n  [EventTopics.MASTER_COMPLETED]: MasterCompletedPayload;\n\n  // Tasks\n  [EventTopics.TASK_CREATED]: TaskCreatedPayload;\n  [EventTopics.TASK_ASSIGNED]: TaskAssignedPayload;\n  [EventTopics.TASK_COMPLETED]: TaskCompletedPayload;\n  [EventTopics.TASK_UPDATED]: TaskUpdatedPayload;\n\n  // Agent Coordination\n  [EventTopics.AGENT_STATUS_UPDATE]: AgentStatusUpdatePayload;\n  [EventTopics.AGENT_HELP_REQUESTED]: AgentHelpRequestedPayload;\n  [EventTopics.AGENT_HELP_CLAIMED]: AgentHelpClaimedPayload;\n  [EventTopics.AGENT_HELP_RESOLVED]: AgentHelpResolvedPayload;\n  [EventTopics.AGENT_BUDDY_PAIRED]: AgentBuddyPairedPayload;\n  [EventTopics.AGENT_HEARTBEAT]: AgentHeartbeatPayload;\n\n  // Metrics\n  [EventTopics.METRICS_TICK]: MetricsTickPayload;\n\n  // Alerts\n  [EventTopics.ALERT_INFO]: AlertInfoPayload;\n  [EventTopics.ALERT_WARNING]: AlertWarningPayload;\n  [EventTopics.ALERT_ERROR]: AlertErrorPayload;\n\n  // Conductor\n  [EventTopics.CONDUCTOR_PLAN_UPDATED]: ConductorPlanUpdatedPayload;\n\n  // Code\n  [EventTopics.CODE_DIFF_PROPOSED]: CodeDiffProposedPayload;\n  [EventTopics.CODE_REVIEW_COMPLETED]: CodeReviewCompletedPayload;\n\n  // UI Events\n  [EventTopics.UI_THEME_CHANGED]: UIThemeChangedPayload;\n  [EventTopics.UI_WIDGET_MOUNTED]: UIWidgetMountedPayload;\n  [EventTopics.UI_WIDGET_UNMOUNTED]: UIWidgetUnmountedPayload;\n  [EventTopics.UI_LAYOUT_RESIZED]: UILayoutResizedPayload;\n  [EventTopics.UI_ROUTE_CHANGED]: UIRouteChangedPayload;\n  [EventTopics.UI_MODAL_OPENED]: UIModalOpenedPayload;\n  [EventTopics.UI_MODAL_CLOSED]: UIModalClosedPayload;\n  [EventTopics.UI_NOTIFICATION_SHOWN]: UINotificationShownPayload;\n  [EventTopics.UI_ERROR_DISPLAYED]: UIErrorDisplayedPayload;\n};\n\n// ============================================================================\n// Validation Helpers\n// ============================================================================\n\nexport function validateEventPayload<T extends EventTopic>(\n  topic: T,\n  payload: unknown\n): EventPayloadMap[T] {\n  const schemaMap: Record<string, z.ZodSchema> = {\n    [EventTopics.JOURNEY_STARTED]: JourneyStartedPayloadSchema,\n    [EventTopics.STAGE_COMPLETED]: StageCompletedPayloadSchema,\n    [EventTopics.JOURNEY_PAUSED]: JourneyPausedPayloadSchema,\n    [EventTopics.JOURNEY_RESUMED]: JourneyResumedPayloadSchema,\n    [EventTopics.JOURNEY_COMPLETED]: JourneyCompletedPayloadSchema,\n    [EventTopics.RECORDING_STARTED]: RecordingStartedPayloadSchema,\n    [EventTopics.RECORDING_STOPPED]: RecordingStoppedPayloadSchema,\n    [EventTopics.TAKES_UPLOADED]: TakesUploadedPayloadSchema,\n    [EventTopics.TAKE_SELECTED]: TakeSelectedPayloadSchema,\n    [EventTopics.COACH_FEEDBACK]: CoachFeedbackPayloadSchema,\n    [EventTopics.COMPING_SUGGESTION]: CompingSuggestionPayloadSchema,\n    [EventTopics.MIX_SUGGESTION]: MixSuggestionPayloadSchema,\n    [EventTopics.MASTER_COMPLETED]: MasterCompletedPayloadSchema,\n    [EventTopics.TASK_CREATED]: TaskCreatedPayloadSchema,\n    [EventTopics.TASK_ASSIGNED]: TaskAssignedPayloadSchema,\n    [EventTopics.TASK_COMPLETED]: TaskCompletedPayloadSchema,\n    [EventTopics.TASK_UPDATED]: TaskUpdatedPayloadSchema,\n    [EventTopics.AGENT_STATUS_UPDATE]: AgentStatusUpdatePayloadSchema,\n    [EventTopics.AGENT_HELP_REQUESTED]: AgentHelpRequestedPayloadSchema,\n    [EventTopics.AGENT_HELP_CLAIMED]: AgentHelpClaimedPayloadSchema,\n    [EventTopics.AGENT_HELP_RESOLVED]: AgentHelpResolvedPayloadSchema,\n    [EventTopics.AGENT_BUDDY_PAIRED]: AgentBuddyPairedPayloadSchema,\n    [EventTopics.AGENT_HEARTBEAT]: AgentHeartbeatPayloadSchema,\n    [EventTopics.METRICS_TICK]: MetricsTickPayloadSchema,\n    [EventTopics.ALERT_INFO]: AlertInfoPayloadSchema,\n    [EventTopics.ALERT_WARNING]: AlertWarningPayloadSchema,\n    [EventTopics.ALERT_ERROR]: AlertErrorPayloadSchema,\n    [EventTopics.CONDUCTOR_PLAN_UPDATED]: ConductorPlanUpdatedPayloadSchema,\n    [EventTopics.CODE_DIFF_PROPOSED]: CodeDiffProposedPayloadSchema,\n    [EventTopics.CODE_REVIEW_COMPLETED]: CodeReviewCompletedPayloadSchema,\n    [EventTopics.UI_THEME_CHANGED]: UIThemeChangedPayloadSchema,\n    [EventTopics.UI_WIDGET_MOUNTED]: UIWidgetMountedPayloadSchema,\n    [EventTopics.UI_WIDGET_UNMOUNTED]: UIWidgetUnmountedPayloadSchema,\n    [EventTopics.UI_LAYOUT_RESIZED]: UILayoutResizedPayloadSchema,\n    [EventTopics.UI_ROUTE_CHANGED]: UIRouteChangedPayloadSchema,\n    [EventTopics.UI_MODAL_OPENED]: UIModalOpenedPayloadSchema,\n    [EventTopics.UI_MODAL_CLOSED]: UIModalClosedPayloadSchema,\n    [EventTopics.UI_NOTIFICATION_SHOWN]: UINotificationShownPayloadSchema,\n    [EventTopics.UI_ERROR_DISPLAYED]: UIErrorDisplayedPayloadSchema,\n  };\n\n  const schema = schemaMap[topic];\n  if (!schema) {\n    throw new Error(`No schema found for topic: ${topic}`);\n  }\n\n  return schema.parse(payload) as EventPayloadMap[T];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/env.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Environment variable validation using Zod\n * @owner Jerry (AI Conductor)\n */\n\nimport { z } from 'zod';\n\n// ============================================================================\n// Environment Schema\n// ============================================================================\n\nexport const EnvSchema = z.object({\n  // Node environment\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\n\n  // Application\n  NEXT_PUBLIC_APP_URL: z.string().url().optional(),\n  PORT: z.coerce.number().default(3000),\n\n  // Event Bus Transport\n  EVENT_BUS_MODE: z.enum(['nats', 'redis', 'gitops', 'test']).default('gitops'),\n  NATS_URL: z.string().url().optional(),\n  REDIS_URL: z.string().url().optional(),\n  EVENT_BUS_AGENT_NAME: z.string().optional(),\n\n  // Database\n  DATABASE_URL: z.string().url().optional(),\n\n  // S3 Storage\n  S3_BUCKET: z.string().optional(),\n  S3_REGION: z.string().default('us-east-1'),\n  S3_ACCESS_KEY: z.string().optional(),\n  S3_SECRET_KEY: z.string().optional(),\n\n  // AI Services\n  ANTHROPIC_API_KEY: z.string().optional(),\n  OPENAI_API_KEY: z.string().optional(),\n\n  // Audio Services\n  ELEVENLABS_API_KEY: z.string().optional(),\n\n  // Authentication\n  NEXTAUTH_SECRET: z.string().optional(),\n  NEXTAUTH_URL: z.string().url().optional(),\n\n  // Feature Flags\n  ENABLE_VOICE_INTERFACE: z.coerce.boolean().default(false),\n  ENABLE_METRICS_COLLECTION: z.coerce.boolean().default(true),\n  ENABLE_AGENT_COORDINATION: z.coerce.boolean().default(true),\n\n  // Monitoring\n  SENTRY_DSN: z.string().url().optional(),\n  SENTRY_ENVIRONMENT: z.string().optional(),\n  LOG_LEVEL: z.enum(['debug', 'info', 'warn', 'error']).default('info'),\n});\n\nexport type Env = z.infer<typeof EnvSchema>;\n\n// ============================================================================\n// Validation Function\n// ============================================================================\n\nlet cachedEnv: Env | null = null;\n\nexport function validateEnv(): Env {\n  if (cachedEnv) {\n    return cachedEnv;\n  }\n\n  try {\n    cachedEnv = EnvSchema.parse(process.env);\n    return cachedEnv;\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const formattedErrors = error.issues.map((err) => {\n        return `  - ${err.path.join('.')}: ${err.message}`;\n      });\n\n      throw new Error(\n        `Environment validation failed:\\n${formattedErrors.join('\\n')}`\n      );\n    }\n    throw error;\n  }\n}\n\n// ============================================================================\n// Runtime Environment Checks\n// ============================================================================\n\nexport function requireEnvVar(key: keyof Env, customMessage?: string): string {\n  const env = validateEnv();\n  const value = env[key];\n\n  if (value === undefined || value === null || value === '') {\n    throw new Error(\n      customMessage || `Required environment variable ${key} is not set`\n    );\n  }\n\n  return String(value);\n}\n\nexport function getEnvVar(key: keyof Env, fallback?: string): string | undefined {\n  const env = validateEnv();\n  const value = env[key];\n  return value !== undefined && value !== null ? String(value) : fallback;\n}\n\n// ============================================================================\n// Environment Type Guards\n// ============================================================================\n\nexport function isProduction(): boolean {\n  return validateEnv().NODE_ENV === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return validateEnv().NODE_ENV === 'development';\n}\n\nexport function isTest(): boolean {\n  return validateEnv().NODE_ENV === 'test';\n}\n\n// ============================================================================\n// Event Bus Config Helpers\n// ============================================================================\n\nexport function getEventBusConfig() {\n  const env = validateEnv();\n\n  return {\n    mode: env.EVENT_BUS_MODE,\n    natsUrl: env.NATS_URL,\n    redisUrl: env.REDIS_URL,\n    agentName: env.EVENT_BUS_AGENT_NAME || 'unknown-agent',\n  };\n}\n\n// ============================================================================\n// Database Config Helpers\n// ============================================================================\n\nexport function getDatabaseConfig() {\n  const env = validateEnv();\n\n  if (!env.DATABASE_URL) {\n    throw new Error('DATABASE_URL is required for database operations');\n  }\n\n  return {\n    url: env.DATABASE_URL,\n  };\n}\n\n// ============================================================================\n// S3 Config Helpers\n// ============================================================================\n\nexport function getS3Config() {\n  const env = validateEnv();\n\n  if (!env.S3_BUCKET || !env.S3_ACCESS_KEY || !env.S3_SECRET_KEY) {\n    throw new Error('S3_BUCKET, S3_ACCESS_KEY, and S3_SECRET_KEY are required for S3 operations');\n  }\n\n  return {\n    bucket: env.S3_BUCKET,\n    region: env.S3_REGION,\n    accessKeyId: env.S3_ACCESS_KEY,\n    secretAccessKey: env.S3_SECRET_KEY,\n  };\n}\n\n// ============================================================================\n// AI Services Config Helpers\n// ============================================================================\n\nexport function getAnthropicConfig() {\n  const env = validateEnv();\n\n  if (!env.ANTHROPIC_API_KEY) {\n    throw new Error('ANTHROPIC_API_KEY is required for Claude API operations');\n  }\n\n  return {\n    apiKey: env.ANTHROPIC_API_KEY,\n  };\n}\n\nexport function getOpenAIConfig() {\n  const env = validateEnv();\n\n  if (!env.OPENAI_API_KEY) {\n    throw new Error('OPENAI_API_KEY is required for OpenAI operations');\n  }\n\n  return {\n    apiKey: env.OPENAI_API_KEY,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/index.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Single source of truth for DAWG AI types\n * @owner Jerry (AI Conductor)\n */\n\n// Event types and schemas\nexport * from './events';\n\n// Environment validation\nexport * from './env';\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,0BAA0B;;AAC1B;AAEA,yBAAyB;AACzB","debugId":null}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/event-bus/src/transports/nats.ts"],"sourcesContent":["/**\n * @package @dawg-ai/event-bus\n * @description NATS transport implementation\n * @owner Jerry (AI Conductor)\n */\n\nimport { connect, type NatsConnection, type Subscription, StringCodec } from 'nats';\nimport type { EventEnvelope, EventTopic } from '@dawg-ai/types';\nimport type { Transport, TransportConfig } from './types';\n\nexport interface NatsTransportConfig extends TransportConfig {\n  url: string;\n  reconnect?: boolean;\n  maxReconnectAttempts?: number;\n}\n\nexport class NatsTransport implements Transport {\n  private connection: NatsConnection | null = null;\n  private subscriptions = new Map<string, Subscription>();\n  private codec = StringCodec();\n  private config: NatsTransportConfig;\n\n  constructor(config: NatsTransportConfig) {\n    this.config = {\n      reconnect: true,\n      maxReconnectAttempts: 10,\n      ...config,\n    };\n  }\n\n  async connect(): Promise<void> {\n    try {\n      this.connection = await connect({\n        servers: this.config.url,\n        reconnect: this.config.reconnect,\n        maxReconnectAttempts: this.config.maxReconnectAttempts,\n      });\n\n      console.log(`[NatsTransport] Connected to NATS at ${this.config.url}`);\n    } catch (error) {\n      console.error('[NatsTransport] Connection failed:', error);\n      throw new Error(`Failed to connect to NATS: ${error}`);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    // Close all subscriptions\n    for (const [topic, subscription] of this.subscriptions.entries()) {\n      try {\n        await subscription.drain();\n        console.log(`[NatsTransport] Unsubscribed from ${topic}`);\n      } catch (error) {\n        console.error(`[NatsTransport] Failed to unsubscribe from ${topic}:`, error);\n      }\n    }\n    this.subscriptions.clear();\n\n    // Close connection\n    if (this.connection) {\n      try {\n        await this.connection.drain();\n        console.log('[NatsTransport] Disconnected from NATS');\n      } catch (error) {\n        console.error('[NatsTransport] Disconnect error:', error);\n      }\n      this.connection = null;\n    }\n  }\n\n  async publish<T = any>(topic: EventTopic, envelope: EventEnvelope<T>): Promise<void> {\n    if (!this.connection) {\n      throw new Error('[NatsTransport] Not connected to NATS');\n    }\n\n    try {\n      const message = JSON.stringify(envelope);\n      this.connection.publish(topic, this.codec.encode(message));\n      console.log(`[NatsTransport] Published to ${topic}`);\n    } catch (error) {\n      console.error(`[NatsTransport] Failed to publish to ${topic}:`, error);\n      throw error;\n    }\n  }\n\n  async subscribe<T = any>(\n    topic: EventTopic,\n    handler: (envelope: EventEnvelope<T>) => void | Promise<void>\n  ): Promise<void> {\n    if (!this.connection) {\n      throw new Error('[NatsTransport] Not connected to NATS');\n    }\n\n    // Check if already subscribed\n    if (this.subscriptions.has(topic)) {\n      console.warn(`[NatsTransport] Already subscribed to ${topic}`);\n      return;\n    }\n\n    try {\n      const subscription = this.connection.subscribe(topic);\n      this.subscriptions.set(topic, subscription);\n\n      // Process messages asynchronously\n      (async () => {\n        for await (const msg of subscription) {\n          try {\n            const data = this.codec.decode(msg.data);\n            const envelope = JSON.parse(data) as EventEnvelope<T>;\n            await handler(envelope);\n          } catch (error) {\n            console.error(`[NatsTransport] Error processing message on ${topic}:`, error);\n          }\n        }\n      })();\n\n      console.log(`[NatsTransport] Subscribed to ${topic}`);\n    } catch (error) {\n      console.error(`[NatsTransport] Failed to subscribe to ${topic}:`, error);\n      throw error;\n    }\n  }\n\n  async unsubscribe(topic: EventTopic): Promise<void> {\n    const subscription = this.subscriptions.get(topic);\n    if (!subscription) {\n      console.warn(`[NatsTransport] Not subscribed to ${topic}`);\n      return;\n    }\n\n    try {\n      await subscription.drain();\n      this.subscriptions.delete(topic);\n      console.log(`[NatsTransport] Unsubscribed from ${topic}`);\n    } catch (error) {\n      console.error(`[NatsTransport] Failed to unsubscribe from ${topic}:`, error);\n      throw error;\n    }\n  }\n\n  isConnected(): boolean {\n    return this.connection !== null && !this.connection.isClosed();\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/event-bus/src/transports/redis.ts"],"sourcesContent":["/**\n * @package @dawg-ai/event-bus\n * @description Redis Streams transport implementation\n * @owner Jerry (AI Conductor)\n */\n\nimport { createClient, type RedisClientType } from 'redis';\nimport type { EventEnvelope, EventTopic } from '@dawg-ai/types';\nimport type { Transport, TransportConfig } from './types';\n\nexport interface RedisTransportConfig extends TransportConfig {\n  url: string;\n  consumerGroup?: string;\n  consumerId?: string;\n}\n\nexport class RedisTransport implements Transport {\n  private publisher: RedisClientType | null = null;\n  private subscriber: RedisClientType | null = null;\n  private subscriptions = new Map<string, AbortController>();\n  private config: RedisTransportConfig;\n\n  constructor(config: RedisTransportConfig) {\n    this.config = {\n      consumerGroup: 'dawg-ai',\n      consumerId: config.agentName || 'default-consumer',\n      ...config,\n    };\n  }\n\n  async connect(): Promise<void> {\n    try {\n      // Create publisher client\n      this.publisher = createClient({ url: this.config.url });\n      await this.publisher.connect();\n\n      // Create subscriber client (separate connection for blocking reads)\n      this.subscriber = createClient({ url: this.config.url });\n      await this.subscriber.connect();\n\n      console.log(`[RedisTransport] Connected to Redis at ${this.config.url}`);\n    } catch (error) {\n      console.error('[RedisTransport] Connection failed:', error);\n      throw new Error(`Failed to connect to Redis: ${error}`);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    // Abort all subscriptions\n    for (const [topic, controller] of this.subscriptions.entries()) {\n      controller.abort();\n      console.log(`[RedisTransport] Unsubscribed from ${topic}`);\n    }\n    this.subscriptions.clear();\n\n    // Close connections\n    if (this.publisher) {\n      await this.publisher.quit();\n      this.publisher = null;\n    }\n    if (this.subscriber) {\n      await this.subscriber.quit();\n      this.subscriber = null;\n    }\n\n    console.log('[RedisTransport] Disconnected from Redis');\n  }\n\n  async publish<T = any>(topic: EventTopic, envelope: EventEnvelope<T>): Promise<void> {\n    if (!this.publisher) {\n      throw new Error('[RedisTransport] Not connected to Redis');\n    }\n\n    try {\n      const streamKey = `events:${topic}`;\n      const message = JSON.stringify(envelope);\n\n      await this.publisher.xAdd(streamKey, '*', {\n        data: message,\n        producer: this.config.agentName || 'unknown',\n        timestamp: Date.now().toString(),\n      });\n\n      console.log(`[RedisTransport] Published to ${topic}`);\n    } catch (error) {\n      console.error(`[RedisTransport] Failed to publish to ${topic}:`, error);\n      throw error;\n    }\n  }\n\n  async subscribe<T = any>(\n    topic: EventTopic,\n    handler: (envelope: EventEnvelope<T>) => void | Promise<void>\n  ): Promise<void> {\n    if (!this.subscriber) {\n      throw new Error('[RedisTransport] Not connected to Redis');\n    }\n\n    // Check if already subscribed\n    if (this.subscriptions.has(topic)) {\n      console.warn(`[RedisTransport] Already subscribed to ${topic}`);\n      return;\n    }\n\n    const streamKey = `events:${topic}`;\n    const consumerGroup = this.config.consumerGroup!;\n    const consumerId = this.config.consumerId!;\n\n    // Create consumer group if it doesn't exist\n    try {\n      await this.subscriber.xGroupCreate(streamKey, consumerGroup, '0', {\n        MKSTREAM: true,\n      });\n    } catch (error: any) {\n      // Ignore \"BUSYGROUP Consumer Group name already exists\" error\n      if (!error.message?.includes('BUSYGROUP')) {\n        console.error(`[RedisTransport] Failed to create consumer group:`, error);\n      }\n    }\n\n    // Start consuming messages\n    const controller = new AbortController();\n    this.subscriptions.set(topic, controller);\n\n    (async () => {\n      let lastId = '>';\n\n      while (!controller.signal.aborted) {\n        try {\n          const messages = await this.subscriber!.xReadGroup(\n            consumerGroup,\n            consumerId,\n            [{ key: streamKey, id: lastId }],\n            {\n              COUNT: 10,\n              BLOCK: 5000, // 5 second timeout\n            }\n          );\n\n          if (!messages || messages.length === 0) {\n            continue;\n          }\n\n          for (const stream of messages) {\n            for (const message of stream.messages) {\n              try {\n                const data = message.message.data;\n                if (typeof data === 'string') {\n                  const envelope = JSON.parse(data) as EventEnvelope<T>;\n                  await handler(envelope);\n\n                  // Acknowledge message\n                  await this.subscriber!.xAck(streamKey, consumerGroup, message.id);\n                }\n              } catch (error) {\n                console.error(`[RedisTransport] Error processing message on ${topic}:`, error);\n              }\n            }\n          }\n        } catch (error: any) {\n          if (controller.signal.aborted) {\n            break;\n          }\n          console.error(`[RedisTransport] Error reading from ${topic}:`, error);\n          // Wait before retrying\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n        }\n      }\n    })();\n\n    console.log(`[RedisTransport] Subscribed to ${topic}`);\n  }\n\n  async unsubscribe(topic: EventTopic): Promise<void> {\n    const controller = this.subscriptions.get(topic);\n    if (!controller) {\n      console.warn(`[RedisTransport] Not subscribed to ${topic}`);\n      return;\n    }\n\n    controller.abort();\n    this.subscriptions.delete(topic);\n    console.log(`[RedisTransport] Unsubscribed from ${topic}`);\n  }\n\n  isConnected(): boolean {\n    return this.publisher?.isOpen === true && this.subscriber?.isOpen === true;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1149, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/event-bus/src/EventBus.ts"],"sourcesContent":["/**\n * @package @dawg-ai/event-bus\n * @description Typed event bus with multi-transport support\n * @owner Jerry (AI Conductor)\n */\n\nimport crypto from 'crypto';\nimport {\n  type EventEnvelope,\n  type EventTopic,\n  type EventPayloadMap,\n  validateEventPayload,\n  validateEnv,\n} from '@dawg-ai/types';\nimport type { Transport } from './transports/types';\nimport { NatsTransport } from './transports/nats';\nimport { RedisTransport } from './transports/redis';\n\nexport interface EventBusConfig {\n  mode: 'nats' | 'redis' | 'gitops' | 'test';\n  agentName: string;\n  natsUrl?: string;\n  redisUrl?: string;\n  signingSecret?: string;\n}\n\ntype EventHandler<T = any> = (envelope: EventEnvelope<T>) => void | Promise<void>;\n\nexport class EventBus {\n  private transport: Transport;\n  private config: EventBusConfig;\n  private handlers = new Map<string, Set<EventHandler>>();\n  private signingSecret: string;\n\n  constructor(config?: Partial<EventBusConfig>) {\n    const env = validateEnv();\n\n    const mode = (config?.mode || env.EVENT_BUS_MODE || 'gitops') as 'nats' | 'redis' | 'gitops' | 'test';\n    const agentName: string = String(config?.agentName || env.EVENT_BUS_AGENT_NAME || 'unknown-agent');\n    const natsUrl: string | undefined = typeof config?.natsUrl === 'string' ? config.natsUrl : typeof env.NATS_URL === 'string' ? env.NATS_URL : undefined;\n    const redisUrl: string | undefined = typeof config?.redisUrl === 'string' ? config.redisUrl : typeof env.REDIS_URL === 'string' ? env.REDIS_URL : undefined;\n    const signingSecret: string | undefined = typeof config?.signingSecret === 'string' ? config.signingSecret : typeof env.NEXTAUTH_SECRET === 'string' ? env.NEXTAUTH_SECRET : undefined;\n\n    this.config = {\n      mode,\n      agentName,\n      natsUrl,\n      redisUrl,\n      signingSecret,\n    };\n\n    this.signingSecret = this.config.signingSecret || 'default-secret';\n\n    // Initialize transport based on mode\n    this.transport = this.createTransport();\n  }\n\n  private createTransport(): Transport {\n    switch (this.config.mode) {\n      case 'nats':\n        if (!this.config.natsUrl) {\n          throw new Error('[EventBus] NATS_URL is required for NATS mode');\n        }\n        return new NatsTransport({\n          url: this.config.natsUrl,\n          agentName: this.config.agentName,\n        });\n\n      case 'redis':\n        if (!this.config.redisUrl) {\n          throw new Error('[EventBus] REDIS_URL is required for Redis mode');\n        }\n        return new RedisTransport({\n          url: this.config.redisUrl,\n          agentName: this.config.agentName,\n        });\n\n      default:\n        throw new Error(`[EventBus] Unsupported mode: ${this.config.mode}`);\n    }\n  }\n\n  async connect(): Promise<void> {\n    await this.transport.connect();\n    console.log(`[EventBus] Connected (mode: ${this.config.mode}, agent: ${this.config.agentName})`);\n  }\n\n  async disconnect(): Promise<void> {\n    await this.transport.disconnect();\n    this.handlers.clear();\n    console.log('[EventBus] Disconnected');\n  }\n\n  /**\n   * Publish an event with type-safe payload\n   */\n  async publish<T extends EventTopic>(\n    topic: T,\n    payload: EventPayloadMap[T],\n    options?: {\n      traceId?: string;\n      skipValidation?: boolean;\n    }\n  ): Promise<void> {\n    // Validate payload against schema (unless skipped)\n    if (!options?.skipValidation) {\n      validateEventPayload(topic, payload);\n    }\n\n    const envelope: EventEnvelope<EventPayloadMap[T]> = {\n      event: topic,\n      version: 'v1',\n      id: this.generateId(),\n      trace_id: options?.traceId || this.generateTraceId(),\n      producer: this.config.agentName,\n      ts: new Date().toISOString(),\n      signature: this.signPayload(payload),\n      payload,\n    };\n\n    await this.transport.publish(topic, envelope);\n\n    // Trigger local handlers (for same-process subscribers)\n    this.triggerHandlers(topic, envelope);\n  }\n\n  /**\n   * Subscribe to an event with type-safe handler\n   */\n  subscribe<T extends EventTopic>(\n    topic: T,\n    handler: (envelope: EventEnvelope<EventPayloadMap[T]>) => void | Promise<void>\n  ): void {\n    if (!this.handlers.has(topic)) {\n      this.handlers.set(topic, new Set());\n\n      // Register with transport (only once per topic)\n      this.transport.subscribe(topic, (envelope) => {\n        this.triggerHandlers(topic, envelope);\n      });\n    }\n\n    this.handlers.get(topic)!.add(handler as EventHandler);\n    console.log(`[EventBus] Subscribed to ${topic} (${this.handlers.get(topic)!.size} handlers)`);\n  }\n\n  /**\n   * Unsubscribe from an event\n   */\n  async unsubscribe<T extends EventTopic>(\n    topic: T,\n    handler?: (envelope: EventEnvelope<EventPayloadMap[T]>) => void | Promise<void>\n  ): Promise<void> {\n    const topicHandlers = this.handlers.get(topic);\n    if (!topicHandlers) {\n      return;\n    }\n\n    if (handler) {\n      // Remove specific handler\n      topicHandlers.delete(handler as EventHandler);\n      console.log(`[EventBus] Unsubscribed handler from ${topic}`);\n\n      // If no more handlers, unsubscribe from transport\n      if (topicHandlers.size === 0) {\n        await this.transport.unsubscribe(topic);\n        this.handlers.delete(topic);\n      }\n    } else {\n      // Remove all handlers for this topic\n      await this.transport.unsubscribe(topic);\n      this.handlers.delete(topic);\n      console.log(`[EventBus] Unsubscribed all handlers from ${topic}`);\n    }\n  }\n\n  /**\n   * Trigger all handlers for a topic\n   */\n  private triggerHandlers<T = any>(topic: string, envelope: EventEnvelope<T>): void {\n    const topicHandlers = this.handlers.get(topic);\n    if (!topicHandlers || topicHandlers.size === 0) {\n      return;\n    }\n\n    for (const handler of topicHandlers) {\n      try {\n        const result = handler(envelope);\n        if (result instanceof Promise) {\n          result.catch((error) => {\n            console.error(`[EventBus] Handler error for ${topic}:`, error);\n          });\n        }\n      } catch (error) {\n        console.error(`[EventBus] Handler error for ${topic}:`, error);\n      }\n    }\n  }\n\n  /**\n   * Wait for a specific event (useful for testing)\n   */\n  async waitForEvent<T extends EventTopic>(\n    topic: T,\n    timeoutMs: number = 5000\n  ): Promise<EventEnvelope<EventPayloadMap[T]>> {\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        this.unsubscribe(topic, handler);\n        reject(new Error(`[EventBus] Timeout waiting for ${topic}`));\n      }, timeoutMs);\n\n      const handler = (envelope: EventEnvelope<EventPayloadMap[T]>) => {\n        clearTimeout(timeout);\n        this.unsubscribe(topic, handler);\n        resolve(envelope);\n      };\n\n      this.subscribe(topic, handler);\n    });\n  }\n\n  /**\n   * Generate unique event ID (ULID-like)\n   */\n  private generateId(): string {\n    const timestamp = Date.now().toString(36);\n    const randomPart = crypto.randomBytes(8).toString('hex');\n    return `evt_${timestamp}_${randomPart}`;\n  }\n\n  /**\n   * Generate trace ID for request correlation\n   */\n  private generateTraceId(): string {\n    const timestamp = Date.now().toString(36);\n    const randomPart = crypto.randomBytes(8).toString('hex');\n    return `tr_${timestamp}_${randomPart}`;\n  }\n\n  /**\n   * Sign payload using HMAC-SHA256\n   */\n  private signPayload(payload: any): string {\n    const message = JSON.stringify(payload);\n    const hmac = crypto.createHmac('sha256', this.signingSecret);\n    hmac.update(message);\n    return hmac.digest('hex');\n  }\n\n  /**\n   * Verify payload signature\n   */\n  verifySignature(payload: any, signature: string): boolean {\n    const expectedSignature = this.signPayload(payload);\n    return crypto.timingSafeEqual(\n      Buffer.from(signature, 'hex'),\n      Buffer.from(expectedSignature, 'hex')\n    );\n  }\n\n  /**\n   * Get connection status\n   */\n  isConnected(): boolean {\n    return this.transport.isConnected();\n  }\n\n  /**\n   * Get current config\n   */\n  getConfig(): EventBusConfig {\n    return { ...this.config };\n  }\n}\n\n// ============================================================================\n// Singleton Instance\n// ============================================================================\n\nlet globalEventBus: EventBus | null = null;\n\nexport function getEventBus(config?: Partial<EventBusConfig>): EventBus {\n  if (!globalEventBus) {\n    globalEventBus = new EventBus(config);\n  }\n  return globalEventBus;\n}\n\nexport function resetEventBus(): void {\n  if (globalEventBus) {\n    globalEventBus.disconnect();\n    globalEventBus = null;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1379, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/event-bus/src/index.ts"],"sourcesContent":["/**\n * @package @dawg-ai/event-bus\n * @description Typed event bus with NATS/Redis transport\n * @owner Jerry (AI Conductor)\n */\n\nexport { EventBus, getEventBus, resetEventBus } from './EventBus';\nexport type { EventBusConfig } from './EventBus';\nexport type { Transport, TransportConfig } from './transports/types';\nexport { NatsTransport } from './transports/nats';\nexport { RedisTransport } from './transports/redis';\n"],"names":[],"mappings":"AAAA;;;;CAIC;AAED;AAGA;AACA","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/hooks/useUIEvents.ts"],"sourcesContent":["/**\n * UI Event Bus Hooks\n * Typed hooks for subscribing to and emitting UI events\n */\n\n'use client';\n\nimport { useEffect, useCallback, useRef } from 'react';\nimport { getEventBus } from '@dawg-ai/event-bus';\nimport {\n  EventTopics,\n  UIThemeChangedPayload,\n  UILayoutResizedPayload,\n  UIRouteChangedPayload,\n  UIModalOpenedPayload,\n  UIModalClosedPayload,\n  UINotificationShownPayload,\n  UIErrorDisplayedPayload,\n} from '@dawg-ai/types';\n\nconst eventBus = getEventBus({ mode: 'test', agentName: 'ui-hooks' });\n\n// ============================================================================\n// useUIEvent - Generic hook for any UI event\n// ============================================================================\n\nexport function useUIEvent<T>(\n  topic: string,\n  handler: (payload: T) => void,\n  deps: React.DependencyList = []\n) {\n  useEffect(() => {\n    const wrappedHandler = (event: any) => {\n      handler(event.payload);\n    };\n\n    eventBus.subscribe(topic as any, wrappedHandler);\n\n    return () => {\n      eventBus.unsubscribe(topic as any, wrappedHandler);\n    };\n  }, deps);\n}\n\n// ============================================================================\n// useTheme - Hook for theme management\n// ============================================================================\n\nexport function useTheme() {\n  const emit = useCallback((payload: UIThemeChangedPayload) => {\n    eventBus.publish(EventTopics.UI_THEME_CHANGED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribe = useCallback((handler: (payload: UIThemeChangedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_THEME_CHANGED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  return { emit, subscribe };\n}\n\n// ============================================================================\n// useLayout - Hook for layout/viewport changes\n// ============================================================================\n\nexport function useLayout() {\n  const emit = useCallback((payload: UILayoutResizedPayload) => {\n    eventBus.publish(EventTopics.UI_LAYOUT_RESIZED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribe = useCallback((handler: (payload: UILayoutResizedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_LAYOUT_RESIZED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  // Automatically track viewport changes\n  useEffect(() => {\n    const getBreakpoint = (width: number): UILayoutResizedPayload['breakpoint'] => {\n      if (width < 640) return 'xs';\n      if (width < 768) return 'sm';\n      if (width < 1024) return 'md';\n      if (width < 1280) return 'lg';\n      if (width < 1536) return 'xl';\n      return '2xl';\n    };\n\n    let previousBreakpoint = getBreakpoint(window.innerWidth);\n\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const breakpoint = getBreakpoint(width);\n\n      if (breakpoint !== previousBreakpoint) {\n        emit({\n          viewport_width: width,\n          viewport_height: height,\n          breakpoint,\n          previous_breakpoint: previousBreakpoint,\n        });\n        previousBreakpoint = breakpoint;\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [emit]);\n\n  return { emit, subscribe };\n}\n\n// ============================================================================\n// useWidget - Hook for widget lifecycle tracking\n// ============================================================================\n\nexport function useWidget(widgetId: string, widgetType: string, props?: Record<string, any>) {\n  const mountTimeRef = useRef<number>();\n\n  useEffect(() => {\n    // Widget mounted\n    mountTimeRef.current = Date.now();\n\n    eventBus.publish(EventTopics.UI_WIDGET_MOUNTED, {\n      widget_id: widgetId,\n      widget_type: widgetType,\n      props,\n    }, {\n      traceId: crypto.randomUUID(),\n    });\n\n    // Widget unmounted\n    return () => {\n      const duration_ms = Date.now() - (mountTimeRef.current || Date.now());\n\n      eventBus.publish(EventTopics.UI_WIDGET_UNMOUNTED, {\n        widget_id: widgetId,\n        widget_type: widgetType,\n        duration_ms,\n      }, {\n        traceId: crypto.randomUUID(),\n      });\n    };\n  }, [widgetId, widgetType, props]);\n}\n\n// ============================================================================\n// useRoute - Hook for route/navigation tracking\n// ============================================================================\n\nexport function useRoute() {\n  const emit = useCallback((payload: UIRouteChangedPayload) => {\n    eventBus.publish(EventTopics.UI_ROUTE_CHANGED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribe = useCallback((handler: (payload: UIRouteChangedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_ROUTE_CHANGED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  return { emit, subscribe };\n}\n\n// ============================================================================\n// useModal - Hook for modal state tracking\n// ============================================================================\n\nexport function useModal() {\n  const open = useCallback((payload: UIModalOpenedPayload) => {\n    eventBus.publish(EventTopics.UI_MODAL_OPENED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const close = useCallback((payload: UIModalClosedPayload) => {\n    eventBus.publish(EventTopics.UI_MODAL_CLOSED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribeOpen = useCallback((handler: (payload: UIModalOpenedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_MODAL_OPENED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  const subscribeClose = useCallback((handler: (payload: UIModalClosedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_MODAL_CLOSED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  return { open, close, subscribeOpen, subscribeClose };\n}\n\n// ============================================================================\n// useNotification - Hook for showing notifications\n// ============================================================================\n\nexport function useNotification() {\n  const show = useCallback((payload: UINotificationShownPayload) => {\n    eventBus.publish(EventTopics.UI_NOTIFICATION_SHOWN, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribe = useCallback((handler: (payload: UINotificationShownPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_NOTIFICATION_SHOWN,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  return { show, subscribe };\n}\n\n// ============================================================================\n// useErrorTracking - Hook for error tracking\n// ============================================================================\n\nexport function useErrorTracking() {\n  const trackError = useCallback((payload: UIErrorDisplayedPayload) => {\n    eventBus.publish(EventTopics.UI_ERROR_DISPLAYED, payload, {\n      traceId: crypto.randomUUID(),\n    });\n  }, []);\n\n  const subscribe = useCallback((handler: (payload: UIErrorDisplayedPayload) => void) => {\n    return eventBus.subscribe(\n      EventTopics.UI_ERROR_DISPLAYED,\n      (event) => handler(event.payload)\n    );\n  }, []);\n\n  // Automatic error boundary integration\n  useEffect(() => {\n    const handleError = (event: ErrorEvent) => {\n      trackError({\n        error_id: crypto.randomUUID(),\n        error_type: event.error?.name || 'UnknownError',\n        message: event.message,\n        stack: event.error?.stack,\n      });\n    };\n\n    const handleUnhandledRejection = (event: PromiseRejectionEvent) => {\n      trackError({\n        error_id: crypto.randomUUID(),\n        error_type: 'UnhandledPromiseRejection',\n        message: event.reason?.message || String(event.reason),\n        stack: event.reason?.stack,\n      });\n    };\n\n    window.addEventListener('error', handleError);\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\n\n    return () => {\n      window.removeEventListener('error', handleError);\n      window.removeEventListener('unhandledrejection', handleUnhandledRejection);\n    };\n  }, [trackError]);\n\n  return { trackError, subscribe };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1623, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/components/examples/UIInfrastructureDemo.tsx"],"sourcesContent":["/**\n * UI Infrastructure Demo Component\n *\n * Demonstrates the complete UI infrastructure:\n * - Design tokens (colors, spacing, typography, etc.)\n * - UI events (theme, layout, widget lifecycle)\n * - Event bus integration\n *\n * This component shows how to properly use the infrastructure\n * in real components.\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useTheme, useLayout, useWidget, useNotification } from '@/hooks/useUIEvents';\n\nexport function UIInfrastructureDemo() {\n  const [currentTheme, setCurrentTheme] = useState<'light' | 'dark' | 'system'>('system');\n  const [breakpoint, setBreakpoint] = useState<string>('unknown');\n  const [notifications, setNotifications] = useState<string[]>([]);\n\n  // Theme management with UI events\n  const { emit: emitTheme, subscribe: onThemeChange } = useTheme();\n\n  // Layout tracking (auto-tracks viewport)\n  const { subscribe: onLayoutChange } = useLayout();\n\n  // Notifications\n  const { show: showNotification, subscribe: onNotification } = useNotification();\n\n  // Widget lifecycle tracking\n  useWidget('ui-demo-001', 'UIInfrastructureDemo', { version: '1.0' });\n\n  // Subscribe to theme changes\n  useEffect(() => {\n    const sub = onThemeChange((payload) => {\n      console.log('[Demo] Theme changed:', payload);\n      setCurrentTheme(payload.theme);\n    });\n    return () => sub.unsubscribe();\n  }, [onThemeChange]);\n\n  // Subscribe to layout changes\n  useEffect(() => {\n    const sub = onLayoutChange((payload) => {\n      console.log('[Demo] Layout changed:', payload);\n      setBreakpoint(payload.breakpoint);\n    });\n    return () => sub.unsubscribe();\n  }, [onLayoutChange]);\n\n  // Subscribe to notifications\n  useEffect(() => {\n    const sub = onNotification((payload) => {\n      console.log('[Demo] Notification shown:', payload);\n      setNotifications(prev => [...prev.slice(-4), payload.message]);\n    });\n    return () => sub.unsubscribe();\n  }, [onNotification]);\n\n  // Handle theme change\n  const handleThemeChange = (newTheme: 'light' | 'dark' | 'system') => {\n    emitTheme({\n      theme: newTheme,\n      previous_theme: currentTheme,\n      user_id: 'demo-user',\n    });\n\n    // Show notification\n    showNotification({\n      notification_id: crypto.randomUUID(),\n      type: 'info',\n      message: `Theme changed to ${newTheme}`,\n      duration_ms: 3000,\n    });\n  };\n\n  return (\n    <div style={{\n      // Using design tokens via CSS variables\n      padding: 'var(--spacing-8)',\n      background: 'var(--color-neutral-50)',\n      borderRadius: 'var(--radius-lg)',\n      boxShadow: 'var(--shadow-xl)',\n      maxWidth: 'var(--spacing-128)',\n      margin: '0 auto',\n    }}>\n      <h1 style={{\n        fontSize: 'var(--text-3xl)',\n        fontWeight: 'var(--font-weight-bold)',\n        marginBottom: 'var(--spacing-6)',\n        color: 'var(--color-neutral-900)',\n      }}>\n        UI Infrastructure Demo\n      </h1>\n\n      {/* Design Tokens Section */}\n      <section style={{\n        marginBottom: 'var(--spacing-8)',\n        padding: 'var(--spacing-6)',\n        background: 'var(--color-primary-50)',\n        borderRadius: 'var(--radius-md)',\n        border: '2px solid var(--color-primary-200)',\n      }}>\n        <h2 style={{\n          fontSize: 'var(--text-xl)',\n          fontWeight: 'var(--font-weight-semibold)',\n          marginBottom: 'var(--spacing-4)',\n          color: 'var(--color-primary-900)',\n        }}>\n          🎨 Design Tokens\n        </h2>\n\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gap: 'var(--spacing-4)',\n        }}>\n          {/* Color Tokens */}\n          <div style={{\n            padding: 'var(--spacing-4)',\n            background: 'var(--color-neutral-0)',\n            borderRadius: 'var(--radius-base)',\n          }}>\n            <h3 style={{\n              fontSize: 'var(--text-sm)',\n              fontWeight: 'var(--font-weight-medium)',\n              marginBottom: 'var(--spacing-2)',\n              color: 'var(--color-neutral-700)',\n            }}>\n              Colors\n            </h3>\n            <div style={{ display: 'flex', gap: 'var(--spacing-2)' }}>\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-primary-500)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-secondary-500)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-accent-500)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n            </div>\n          </div>\n\n          {/* Spacing Tokens */}\n          <div style={{\n            padding: 'var(--spacing-4)',\n            background: 'var(--color-neutral-0)',\n            borderRadius: 'var(--radius-base)',\n          }}>\n            <h3 style={{\n              fontSize: 'var(--text-sm)',\n              fontWeight: 'var(--font-weight-medium)',\n              marginBottom: 'var(--spacing-2)',\n              color: 'var(--color-neutral-700)',\n            }}>\n              Spacing\n            </h3>\n            <div style={{ display: 'flex', alignItems: 'flex-end', gap: 'var(--spacing-2)' }}>\n              <div style={{ width: 'var(--spacing-4)', height: 'var(--spacing-4)', background: 'var(--color-neutral-400)' }} />\n              <div style={{ width: 'var(--spacing-4)', height: 'var(--spacing-8)', background: 'var(--color-neutral-400)' }} />\n              <div style={{ width: 'var(--spacing-4)', height: 'var(--spacing-12)', background: 'var(--color-neutral-400)' }} />\n              <div style={{ width: 'var(--spacing-4)', height: 'var(--spacing-16)', background: 'var(--color-neutral-400)' }} />\n            </div>\n          </div>\n\n          {/* Shadow Tokens */}\n          <div style={{\n            padding: 'var(--spacing-4)',\n            background: 'var(--color-neutral-0)',\n            borderRadius: 'var(--radius-base)',\n          }}>\n            <h3 style={{\n              fontSize: 'var(--text-sm)',\n              fontWeight: 'var(--font-weight-medium)',\n              marginBottom: 'var(--spacing-2)',\n              color: 'var(--color-neutral-700)',\n            }}>\n              Shadows\n            </h3>\n            <div style={{ display: 'flex', gap: 'var(--spacing-2)' }}>\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-neutral-0)',\n                boxShadow: 'var(--shadow-sm)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-neutral-0)',\n                boxShadow: 'var(--shadow-md)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n              <div style={{\n                width: 'var(--spacing-12)',\n                height: 'var(--spacing-12)',\n                background: 'var(--color-neutral-0)',\n                boxShadow: 'var(--shadow-lg)',\n                borderRadius: 'var(--radius-base)',\n              }} />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* UI Events Section */}\n      <section style={{\n        marginBottom: 'var(--spacing-8)',\n        padding: 'var(--spacing-6)',\n        background: 'var(--color-secondary-50)',\n        borderRadius: 'var(--radius-md)',\n        border: '2px solid var(--color-secondary-200)',\n      }}>\n        <h2 style={{\n          fontSize: 'var(--text-xl)',\n          fontWeight: 'var(--font-weight-semibold)',\n          marginBottom: 'var(--spacing-4)',\n          color: 'var(--color-secondary-900)',\n        }}>\n          📡 UI Events\n        </h2>\n\n        {/* Theme Control */}\n        <div style={{ marginBottom: 'var(--spacing-4)' }}>\n          <h3 style={{\n            fontSize: 'var(--text-base)',\n            fontWeight: 'var(--font-weight-medium)',\n            marginBottom: 'var(--spacing-2)',\n            color: 'var(--color-neutral-700)',\n          }}>\n            Theme: <span style={{ color: 'var(--color-secondary-600)' }}>{currentTheme}</span>\n          </h3>\n          <div style={{ display: 'flex', gap: 'var(--spacing-2)' }}>\n            {(['light', 'dark', 'system'] as const).map(theme => (\n              <button\n                key={theme}\n                onClick={() => handleThemeChange(theme)}\n                style={{\n                  padding: 'var(--spacing-2) var(--spacing-4)',\n                  background: theme === currentTheme ? 'var(--color-secondary-500)' : 'var(--color-neutral-0)',\n                  color: theme === currentTheme ? 'var(--color-neutral-0)' : 'var(--color-neutral-900)',\n                  border: '2px solid var(--color-secondary-300)',\n                  borderRadius: 'var(--radius-base)',\n                  fontSize: 'var(--text-sm)',\n                  fontWeight: 'var(--font-weight-medium)',\n                  cursor: 'pointer',\n                  transition: 'all var(--duration-fast) var(--ease-out)',\n                }}\n              >\n                {theme}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Layout Info */}\n        <div style={{ marginBottom: 'var(--spacing-4)' }}>\n          <h3 style={{\n            fontSize: 'var(--text-base)',\n            fontWeight: 'var(--font-weight-medium)',\n            marginBottom: 'var(--spacing-2)',\n            color: 'var(--color-neutral-700)',\n          }}>\n            Breakpoint: <span style={{ color: 'var(--color-secondary-600)' }}>{breakpoint}</span>\n          </h3>\n          <p style={{\n            fontSize: 'var(--text-sm)',\n            color: 'var(--color-neutral-600)',\n          }}>\n            Resize window to see breakpoint changes tracked automatically\n          </p>\n        </div>\n\n        {/* Notifications */}\n        <div>\n          <h3 style={{\n            fontSize: 'var(--text-base)',\n            fontWeight: 'var(--font-weight-medium)',\n            marginBottom: 'var(--spacing-2)',\n            color: 'var(--color-neutral-700)',\n          }}>\n            Recent Notifications:\n          </h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--spacing-2)' }}>\n            {notifications.length === 0 ? (\n              <p style={{\n                fontSize: 'var(--text-sm)',\n                color: 'var(--color-neutral-500)',\n                fontStyle: 'italic',\n              }}>\n                No notifications yet. Change theme to trigger one.\n              </p>\n            ) : (\n              notifications.map((notif, i) => (\n                <div\n                  key={i}\n                  style={{\n                    padding: 'var(--spacing-2) var(--spacing-3)',\n                    background: 'var(--color-neutral-0)',\n                    borderRadius: 'var(--radius-base)',\n                    fontSize: 'var(--text-sm)',\n                    color: 'var(--color-neutral-700)',\n                    border: '1px solid var(--color-secondary-200)',\n                  }}\n                >\n                  {notif}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Event Bus Info */}\n      <section style={{\n        padding: 'var(--spacing-6)',\n        background: 'var(--color-accent-50)',\n        borderRadius: 'var(--radius-md)',\n        border: '2px solid var(--color-accent-200)',\n      }}>\n        <h2 style={{\n          fontSize: 'var(--text-xl)',\n          fontWeight: 'var(--font-weight-semibold)',\n          marginBottom: 'var(--spacing-4)',\n          color: 'var(--color-accent-900)',\n        }}>\n          📊 Event Bus Status\n        </h2>\n        <div style={{\n          padding: 'var(--spacing-4)',\n          background: 'var(--color-neutral-0)',\n          borderRadius: 'var(--radius-base)',\n          fontFamily: 'var(--font-mono)',\n          fontSize: 'var(--text-sm)',\n          color: 'var(--color-neutral-700)',\n        }}>\n          <p>✅ Widget lifecycle tracked: ui.widget.mounted</p>\n          <p>✅ Theme changes: ui.theme.changed</p>\n          <p>✅ Layout resize: ui.layout.resized (auto)</p>\n          <p>✅ Notifications: ui.notification.shown</p>\n          <p style={{ marginTop: 'var(--spacing-2)', color: 'var(--color-accent-700)' }}>\n            Open console to see event logs\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}