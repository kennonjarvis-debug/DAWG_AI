{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/events.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Event types and Zod schemas for DAWG AI event bus\n * @owner Jerry (AI Conductor)\n */\n\nimport { z } from 'zod';\n\n// ============================================================================\n// Base Event Envelope\n// ============================================================================\n\nexport const EventEnvelopeSchema = z.object({\n  event: z.string(),\n  version: z.string().default('v1'),\n  id: z.string(),\n  trace_id: z.string(),\n  producer: z.string(),\n  ts: z.string().datetime(),\n  signature: z.string(),\n  payload: z.record(z.string(), z.any()),\n});\n\nexport type EventEnvelope<T = any> = {\n  event: string;\n  version: string;\n  id: string;\n  trace_id: string;\n  producer: string;\n  ts: string;\n  signature: string;\n  payload: T;\n};\n\n// ============================================================================\n// Journey Events (journey.*)\n// ============================================================================\n\nexport const VocalProfileSchema = z.object({\n  lowest_note: z.string(),\n  highest_note: z.string(),\n  range_semitones: z.number(),\n  skill_level: z.enum(['beginner', 'intermediate', 'advanced']),\n});\n\nexport const JourneyStartedPayloadSchema = z.object({\n  journey_id: z.string(),\n  user_id: z.string(),\n  journey_type: z.enum(['record_song', 'expand_range', 'improve_control', 'build_confidence']),\n  estimated_weeks: z.number(),\n  difficulty: z.enum(['easy', 'medium', 'hard']),\n  vocal_profile: VocalProfileSchema,\n});\n\nexport const StageCompletedPayloadSchema = z.object({\n  journey_id: z.string(),\n  stage_id: z.string(),\n  stage_name: z.string(),\n  completion_time_sec: z.number(),\n  next_stage_id: z.string().optional(),\n});\n\nexport const JourneyPausedPayloadSchema = z.object({\n  journey_id: z.string(),\n  reason: z.enum(['user_request', 'ai_recommendation', 'technical_issue']).optional(),\n});\n\nexport const JourneyResumedPayloadSchema = z.object({\n  journey_id: z.string(),\n  paused_duration_sec: z.number(),\n});\n\nexport const JourneyCompletedPayloadSchema = z.object({\n  journey_id: z.string(),\n  total_duration_sec: z.number(),\n  stages_completed: z.number(),\n  final_recording_id: z.string().optional(),\n});\n\nexport type VocalProfile = z.infer<typeof VocalProfileSchema>;\nexport type JourneyStartedPayload = z.infer<typeof JourneyStartedPayloadSchema>;\nexport type StageCompletedPayload = z.infer<typeof StageCompletedPayloadSchema>;\nexport type JourneyPausedPayload = z.infer<typeof JourneyPausedPayloadSchema>;\nexport type JourneyResumedPayload = z.infer<typeof JourneyResumedPayloadSchema>;\nexport type JourneyCompletedPayload = z.infer<typeof JourneyCompletedPayloadSchema>;\n\n// ============================================================================\n// Recording Events (recording.*)\n// ============================================================================\n\nexport const RecordingStartedPayloadSchema = z.object({\n  recording_id: z.string(),\n  journey_id: z.string(),\n  user_id: z.string(),\n  track_id: z.string(),\n  input_device: z.string(),\n});\n\nexport const RecordingStoppedPayloadSchema = z.object({\n  recording_id: z.string(),\n  duration_sec: z.number(),\n  file_size_bytes: z.number(),\n  sample_rate: z.number(),\n  format: z.enum(['wav', 'mp3', 'webm', 'opus']),\n});\n\nexport const TakesUploadedPayloadSchema = z.object({\n  recording_id: z.string(),\n  take_ids: z.array(z.string()),\n  take_count: z.number(),\n  total_size_bytes: z.number(),\n});\n\nexport const TakeSelectedPayloadSchema = z.object({\n  recording_id: z.string(),\n  selected_take_id: z.string(),\n  selection_reason: z.enum(['ai_recommendation', 'user_choice']),\n});\n\nexport type RecordingStartedPayload = z.infer<typeof RecordingStartedPayloadSchema>;\nexport type RecordingStoppedPayload = z.infer<typeof RecordingStoppedPayloadSchema>;\nexport type TakesUploadedPayload = z.infer<typeof TakesUploadedPayloadSchema>;\nexport type TakeSelectedPayload = z.infer<typeof TakeSelectedPayloadSchema>;\n\n// ============================================================================\n// AI Feedback Events (coach.*, comping.*, mix.*, master.*)\n// ============================================================================\n\nexport const CoachFeedbackPayloadSchema = z.object({\n  recording_id: z.string(),\n  timestamp_sec: z.number(),\n  detected_issue: z.enum([\n    'pitch_flat',\n    'pitch_sharp',\n    'timing_early',\n    'timing_late',\n    'breath_support',\n    'vowel_shape',\n    'vibrato',\n  ]),\n  severity: z.enum(['info', 'warning', 'critical']),\n  message: z.string(),\n  suggested_fix: z.string().optional(),\n});\n\nexport const CompingSuggestionPayloadSchema = z.object({\n  recording_id: z.string(),\n  take_ids: z.array(z.string()),\n  suggested_take_id: z.string(),\n  confidence_score: z.number().min(0).max(1),\n  reasoning: z.string(),\n});\n\nexport const MixSuggestionPayloadSchema = z.object({\n  recording_id: z.string(),\n  effect_chain: z.array(\n    z.object({\n      effect_type: z.enum(['eq', 'compression', 'reverb', 'delay', 'saturation', 'deesser']),\n      parameters: z.record(z.string(), z.number()),\n    })\n  ),\n  reasoning: z.string(),\n});\n\nexport const MasterCompletedPayloadSchema = z.object({\n  recording_id: z.string(),\n  mastered_file_url: z.string(),\n  lufs: z.number(),\n  peak_db: z.number(),\n  duration_sec: z.number(),\n});\n\nexport type CoachFeedbackPayload = z.infer<typeof CoachFeedbackPayloadSchema>;\nexport type CompingSuggestionPayload = z.infer<typeof CompingSuggestionPayloadSchema>;\nexport type MixSuggestionPayload = z.infer<typeof MixSuggestionPayloadSchema>;\nexport type MasterCompletedPayload = z.infer<typeof MasterCompletedPayloadSchema>;\n\n// ============================================================================\n// Task Events (tasks.*)\n// ============================================================================\n\nexport const TaskCreatedPayloadSchema = z.object({\n  task_id: z.string(),\n  title: z.string(),\n  owner: z.string(),\n  priority: z.enum(['P0', 'P1', 'P2', 'P3']),\n  estimate_days: z.number(),\n  dependencies: z.array(z.string()).optional(),\n});\n\nexport const TaskAssignedPayloadSchema = z.object({\n  task_id: z.string(),\n  assigned_to: z.string(),\n  assigned_by: z.string(),\n  deadline: z.string().datetime().optional(),\n});\n\nexport const TaskCompletedPayloadSchema = z.object({\n  task_ids: z.array(z.string()),\n  completed_items: z.array(z.string()),\n  completed_by: z.string(),\n});\n\nexport const TaskUpdatedPayloadSchema = z.object({\n  task_id: z.string(),\n  action: z.enum(['backlog_refined', 'priority_changed', 'blocked', 'unblocked']),\n  changes: z.record(z.string(), z.any()),\n});\n\nexport type TaskCreatedPayload = z.infer<typeof TaskCreatedPayloadSchema>;\nexport type TaskAssignedPayload = z.infer<typeof TaskAssignedPayloadSchema>;\nexport type TaskCompletedPayload = z.infer<typeof TaskCompletedPayloadSchema>;\nexport type TaskUpdatedPayload = z.infer<typeof TaskUpdatedPayloadSchema>;\n\n// ============================================================================\n// Agent Coordination Events (agent.*)\n// ============================================================================\n\nexport const AgentStatusUpdatePayloadSchema = z.object({\n  agent_id: z.string(),\n  agent_name: z.string(),\n  status: z.enum(['active', 'idle', 'blocked', 'offline']),\n  current_task: z.string().optional(),\n  progress: z.number().min(0).max(100),\n  health: z.enum(['healthy', 'degraded', 'critical']),\n  needs_help: z.boolean(),\n  available_to_help: z.boolean(),\n  computational_resources: z.object({\n    cpu_usage: z.number().min(0).max(100),\n    memory_usage: z.number().min(0).max(100),\n    available_capacity: z.number().min(0).max(100),\n  }),\n});\n\nexport const AgentHelpRequestedPayloadSchema = z.object({\n  request_id: z.string(),\n  requester: z.string(),\n  requester_name: z.string(),\n  issue: z.string(),\n  urgency: z.enum(['low', 'medium', 'high', 'critical']),\n  required_capabilities: z.array(z.string()).optional(),\n  context: z.record(z.string(), z.any()).optional(),\n});\n\nexport const AgentHelpClaimedPayloadSchema = z.object({\n  request_id: z.string(),\n  claimed_by: z.string(),\n  claimed_by_name: z.string(),\n});\n\nexport const AgentHelpResolvedPayloadSchema = z.object({\n  request_id: z.string(),\n  resolved_by: z.string(),\n  resolved_by_name: z.string(),\n  resolution_notes: z.string().optional(),\n});\n\nexport const AgentBuddyPairedPayloadSchema = z.object({\n  primary: z.string(),\n  buddy: z.string(),\n  focus: z.string(),\n});\n\nexport const AgentHeartbeatPayloadSchema = z.object({\n  agent_id: z.string(),\n  agent_name: z.string(),\n  status: z.enum(['active', 'idle', 'blocked', 'offline']),\n  health: z.enum(['healthy', 'degraded', 'critical']),\n});\n\nexport type AgentStatusUpdatePayload = z.infer<typeof AgentStatusUpdatePayloadSchema>;\nexport type AgentHelpRequestedPayload = z.infer<typeof AgentHelpRequestedPayloadSchema>;\nexport type AgentHelpClaimedPayload = z.infer<typeof AgentHelpClaimedPayloadSchema>;\nexport type AgentHelpResolvedPayload = z.infer<typeof AgentHelpResolvedPayloadSchema>;\nexport type AgentBuddyPairedPayload = z.infer<typeof AgentBuddyPairedPayloadSchema>;\nexport type AgentHeartbeatPayload = z.infer<typeof AgentHeartbeatPayloadSchema>;\n\n// ============================================================================\n// Metrics Events (metrics.*)\n// ============================================================================\n\nexport const MetricSchema = z.object({\n  name: z.string(),\n  value: z.number(),\n  unit: z.string(),\n  tags: z.record(z.string(), z.string()).optional(),\n});\n\nexport const MetricsTickPayloadSchema = z.object({\n  metrics: z.array(MetricSchema),\n  period_sec: z.number(),\n  timestamp: z.string().datetime(),\n});\n\nexport type Metric = z.infer<typeof MetricSchema>;\nexport type MetricsTickPayload = z.infer<typeof MetricsTickPayloadSchema>;\n\n// ============================================================================\n// Alerts Events (alerts.*)\n// ============================================================================\n\nexport const AlertInfoPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string().optional(),\n  feature: z.string().optional(),\n  metadata: z.record(z.string(), z.any()).optional(),\n});\n\nexport const AlertWarningPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string(),\n  severity: z.enum(['low', 'medium', 'high']),\n  action_required: z.boolean(),\n});\n\nexport const AlertErrorPayloadSchema = z.object({\n  msg: z.string(),\n  agent: z.string(),\n  error_code: z.string(),\n  stack_trace: z.string().optional(),\n  recovery_attempted: z.boolean(),\n});\n\nexport type AlertInfoPayload = z.infer<typeof AlertInfoPayloadSchema>;\nexport type AlertWarningPayload = z.infer<typeof AlertWarningPayloadSchema>;\nexport type AlertErrorPayload = z.infer<typeof AlertErrorPayloadSchema>;\n\n// ============================================================================\n// Conductor Events (conductor.*)\n// ============================================================================\n\nexport const ConductorPlanUpdatedPayloadSchema = z.object({\n  msg: z.string(),\n  plan_version: z.string(),\n  contracts: z.object({\n    event_schemas: z.array(z.string()),\n    openapi_specs: z.array(z.string()),\n    grpc_protos: z.array(z.string()),\n    e2e_tests: z.array(z.string()).optional(),\n  }),\n  capabilities: z.array(z.string()),\n  links: z.record(z.string(), z.string()),\n});\n\nexport type ConductorPlanUpdatedPayload = z.infer<typeof ConductorPlanUpdatedPayloadSchema>;\n\n// ============================================================================\n// Code Events (code.*)\n// ============================================================================\n\nexport const CodeDiffProposedPayloadSchema = z.object({\n  task_id: z.string(),\n  branch: z.string(),\n  diff: z.string(),\n  tests: z.object({\n    passed: z.number(),\n    failed: z.number(),\n  }),\n  coverage: z.object({\n    lines: z.number(),\n  }),\n  notes: z.string().optional(),\n});\n\nexport const CodeReviewCompletedPayloadSchema = z.object({\n  task_id: z.string(),\n  review_type: z.string(),\n  files_analyzed: z.number(),\n  issues_found: z.record(z.string(), z.number()),\n  report_location: z.string(),\n  key_findings: z.array(z.string()),\n  recommendations: z.record(z.string(), z.string()),\n  estimated_effort: z.string(),\n});\n\nexport type CodeDiffProposedPayload = z.infer<typeof CodeDiffProposedPayloadSchema>;\nexport type CodeReviewCompletedPayload = z.infer<typeof CodeReviewCompletedPayloadSchema>;\n\n// ============================================================================\n// UI Events (ui.*)\n// ============================================================================\n\nexport const UIThemeChangedPayloadSchema = z.object({\n  theme: z.enum(['light', 'dark', 'system']),\n  previous_theme: z.enum(['light', 'dark', 'system']),\n  user_id: z.string().optional(),\n});\n\nexport const UIWidgetMountedPayloadSchema = z.object({\n  widget_id: z.string(),\n  widget_type: z.string(),\n  parent_id: z.string().optional(),\n  props: z.record(z.string(), z.any()).optional(),\n});\n\nexport const UIWidgetUnmountedPayloadSchema = z.object({\n  widget_id: z.string(),\n  widget_type: z.string(),\n  duration_ms: z.number(),\n});\n\nexport const UILayoutResizedPayloadSchema = z.object({\n  viewport_width: z.number(),\n  viewport_height: z.number(),\n  breakpoint: z.enum(['xs', 'sm', 'md', 'lg', 'xl', '2xl']),\n  previous_breakpoint: z.enum(['xs', 'sm', 'md', 'lg', 'xl', '2xl']).optional(),\n});\n\nexport const UIRouteChangedPayloadSchema = z.object({\n  from: z.string(),\n  to: z.string(),\n  query_params: z.record(z.string(), z.string()).optional(),\n});\n\nexport const UIModalOpenedPayloadSchema = z.object({\n  modal_id: z.string(),\n  modal_type: z.string(),\n  trigger: z.enum(['user', 'system', 'error']),\n});\n\nexport const UIModalClosedPayloadSchema = z.object({\n  modal_id: z.string(),\n  modal_type: z.string(),\n  action: z.enum(['confirm', 'cancel', 'close', 'backdrop']),\n  duration_ms: z.number(),\n});\n\nexport const UINotificationShownPayloadSchema = z.object({\n  notification_id: z.string(),\n  type: z.enum(['info', 'success', 'warning', 'error']),\n  message: z.string(),\n  duration_ms: z.number().optional(),\n});\n\nexport const UIErrorDisplayedPayloadSchema = z.object({\n  error_id: z.string(),\n  error_type: z.string(),\n  message: z.string(),\n  stack: z.string().optional(),\n  component: z.string().optional(),\n});\n\nexport type UIThemeChangedPayload = z.infer<typeof UIThemeChangedPayloadSchema>;\nexport type UIWidgetMountedPayload = z.infer<typeof UIWidgetMountedPayloadSchema>;\nexport type UIWidgetUnmountedPayload = z.infer<typeof UIWidgetUnmountedPayloadSchema>;\nexport type UILayoutResizedPayload = z.infer<typeof UILayoutResizedPayloadSchema>;\nexport type UIRouteChangedPayload = z.infer<typeof UIRouteChangedPayloadSchema>;\nexport type UIModalOpenedPayload = z.infer<typeof UIModalOpenedPayloadSchema>;\nexport type UIModalClosedPayload = z.infer<typeof UIModalClosedPayloadSchema>;\nexport type UINotificationShownPayload = z.infer<typeof UINotificationShownPayloadSchema>;\nexport type UIErrorDisplayedPayload = z.infer<typeof UIErrorDisplayedPayloadSchema>;\n\n// ============================================================================\n// Event Topic Constants\n// ============================================================================\n\nexport const EventTopics = {\n  // Journey\n  JOURNEY_STARTED: 'journey.started',\n  STAGE_COMPLETED: 'stage.completed',\n  JOURNEY_PAUSED: 'journey.paused',\n  JOURNEY_RESUMED: 'journey.resumed',\n  JOURNEY_COMPLETED: 'journey.completed',\n\n  // Recording\n  RECORDING_STARTED: 'recording.started',\n  RECORDING_STOPPED: 'recording.stopped',\n  TAKES_UPLOADED: 'recording.takes.uploaded',\n  TAKE_SELECTED: 'recording.take.selected',\n\n  // AI Feedback\n  COACH_FEEDBACK: 'coach.feedback',\n  COMPING_SUGGESTION: 'comping.suggestion',\n  MIX_SUGGESTION: 'mix.suggestion',\n  MASTER_COMPLETED: 'master.completed',\n\n  // Tasks\n  TASK_CREATED: 'tasks.created',\n  TASK_ASSIGNED: 'tasks.assigned',\n  TASK_COMPLETED: 'tasks.completed',\n  TASK_UPDATED: 'tasks.updated',\n\n  // Agent Coordination\n  AGENT_STATUS_UPDATE: 'agent.status.update',\n  AGENT_HELP_REQUESTED: 'agent.help.requested',\n  AGENT_HELP_CLAIMED: 'agent.help.claimed',\n  AGENT_HELP_RESOLVED: 'agent.help.resolved',\n  AGENT_BUDDY_PAIRED: 'agent.buddy.paired',\n  AGENT_HEARTBEAT: 'agent.heartbeat',\n\n  // Metrics\n  METRICS_TICK: 'metrics.tick',\n\n  // Alerts\n  ALERT_INFO: 'alerts.info',\n  ALERT_WARNING: 'alerts.warning',\n  ALERT_ERROR: 'alerts.error',\n\n  // Conductor\n  CONDUCTOR_PLAN_UPDATED: 'conductor.plan.updated',\n\n  // Code\n  CODE_DIFF_PROPOSED: 'code.diff.proposed',\n  CODE_REVIEW_COMPLETED: 'code.review.completed',\n\n  // UI Events\n  UI_THEME_CHANGED: 'ui.theme.changed',\n  UI_WIDGET_MOUNTED: 'ui.widget.mounted',\n  UI_WIDGET_UNMOUNTED: 'ui.widget.unmounted',\n  UI_LAYOUT_RESIZED: 'ui.layout.resized',\n  UI_ROUTE_CHANGED: 'ui.route.changed',\n  UI_MODAL_OPENED: 'ui.modal.opened',\n  UI_MODAL_CLOSED: 'ui.modal.closed',\n  UI_NOTIFICATION_SHOWN: 'ui.notification.shown',\n  UI_ERROR_DISPLAYED: 'ui.error.displayed',\n} as const;\n\nexport type EventTopic = (typeof EventTopics)[keyof typeof EventTopics];\n\n// ============================================================================\n// Event Payload Type Map\n// ============================================================================\n\nexport type EventPayloadMap = {\n  // Journey\n  [EventTopics.JOURNEY_STARTED]: JourneyStartedPayload;\n  [EventTopics.STAGE_COMPLETED]: StageCompletedPayload;\n  [EventTopics.JOURNEY_PAUSED]: JourneyPausedPayload;\n  [EventTopics.JOURNEY_RESUMED]: JourneyResumedPayload;\n  [EventTopics.JOURNEY_COMPLETED]: JourneyCompletedPayload;\n\n  // Recording\n  [EventTopics.RECORDING_STARTED]: RecordingStartedPayload;\n  [EventTopics.RECORDING_STOPPED]: RecordingStoppedPayload;\n  [EventTopics.TAKES_UPLOADED]: TakesUploadedPayload;\n  [EventTopics.TAKE_SELECTED]: TakeSelectedPayload;\n\n  // AI Feedback\n  [EventTopics.COACH_FEEDBACK]: CoachFeedbackPayload;\n  [EventTopics.COMPING_SUGGESTION]: CompingSuggestionPayload;\n  [EventTopics.MIX_SUGGESTION]: MixSuggestionPayload;\n  [EventTopics.MASTER_COMPLETED]: MasterCompletedPayload;\n\n  // Tasks\n  [EventTopics.TASK_CREATED]: TaskCreatedPayload;\n  [EventTopics.TASK_ASSIGNED]: TaskAssignedPayload;\n  [EventTopics.TASK_COMPLETED]: TaskCompletedPayload;\n  [EventTopics.TASK_UPDATED]: TaskUpdatedPayload;\n\n  // Agent Coordination\n  [EventTopics.AGENT_STATUS_UPDATE]: AgentStatusUpdatePayload;\n  [EventTopics.AGENT_HELP_REQUESTED]: AgentHelpRequestedPayload;\n  [EventTopics.AGENT_HELP_CLAIMED]: AgentHelpClaimedPayload;\n  [EventTopics.AGENT_HELP_RESOLVED]: AgentHelpResolvedPayload;\n  [EventTopics.AGENT_BUDDY_PAIRED]: AgentBuddyPairedPayload;\n  [EventTopics.AGENT_HEARTBEAT]: AgentHeartbeatPayload;\n\n  // Metrics\n  [EventTopics.METRICS_TICK]: MetricsTickPayload;\n\n  // Alerts\n  [EventTopics.ALERT_INFO]: AlertInfoPayload;\n  [EventTopics.ALERT_WARNING]: AlertWarningPayload;\n  [EventTopics.ALERT_ERROR]: AlertErrorPayload;\n\n  // Conductor\n  [EventTopics.CONDUCTOR_PLAN_UPDATED]: ConductorPlanUpdatedPayload;\n\n  // Code\n  [EventTopics.CODE_DIFF_PROPOSED]: CodeDiffProposedPayload;\n  [EventTopics.CODE_REVIEW_COMPLETED]: CodeReviewCompletedPayload;\n\n  // UI Events\n  [EventTopics.UI_THEME_CHANGED]: UIThemeChangedPayload;\n  [EventTopics.UI_WIDGET_MOUNTED]: UIWidgetMountedPayload;\n  [EventTopics.UI_WIDGET_UNMOUNTED]: UIWidgetUnmountedPayload;\n  [EventTopics.UI_LAYOUT_RESIZED]: UILayoutResizedPayload;\n  [EventTopics.UI_ROUTE_CHANGED]: UIRouteChangedPayload;\n  [EventTopics.UI_MODAL_OPENED]: UIModalOpenedPayload;\n  [EventTopics.UI_MODAL_CLOSED]: UIModalClosedPayload;\n  [EventTopics.UI_NOTIFICATION_SHOWN]: UINotificationShownPayload;\n  [EventTopics.UI_ERROR_DISPLAYED]: UIErrorDisplayedPayload;\n};\n\n// ============================================================================\n// Validation Helpers\n// ============================================================================\n\nexport function validateEventPayload<T extends EventTopic>(\n  topic: T,\n  payload: unknown\n): EventPayloadMap[T] {\n  const schemaMap: Record<string, z.ZodSchema> = {\n    [EventTopics.JOURNEY_STARTED]: JourneyStartedPayloadSchema,\n    [EventTopics.STAGE_COMPLETED]: StageCompletedPayloadSchema,\n    [EventTopics.JOURNEY_PAUSED]: JourneyPausedPayloadSchema,\n    [EventTopics.JOURNEY_RESUMED]: JourneyResumedPayloadSchema,\n    [EventTopics.JOURNEY_COMPLETED]: JourneyCompletedPayloadSchema,\n    [EventTopics.RECORDING_STARTED]: RecordingStartedPayloadSchema,\n    [EventTopics.RECORDING_STOPPED]: RecordingStoppedPayloadSchema,\n    [EventTopics.TAKES_UPLOADED]: TakesUploadedPayloadSchema,\n    [EventTopics.TAKE_SELECTED]: TakeSelectedPayloadSchema,\n    [EventTopics.COACH_FEEDBACK]: CoachFeedbackPayloadSchema,\n    [EventTopics.COMPING_SUGGESTION]: CompingSuggestionPayloadSchema,\n    [EventTopics.MIX_SUGGESTION]: MixSuggestionPayloadSchema,\n    [EventTopics.MASTER_COMPLETED]: MasterCompletedPayloadSchema,\n    [EventTopics.TASK_CREATED]: TaskCreatedPayloadSchema,\n    [EventTopics.TASK_ASSIGNED]: TaskAssignedPayloadSchema,\n    [EventTopics.TASK_COMPLETED]: TaskCompletedPayloadSchema,\n    [EventTopics.TASK_UPDATED]: TaskUpdatedPayloadSchema,\n    [EventTopics.AGENT_STATUS_UPDATE]: AgentStatusUpdatePayloadSchema,\n    [EventTopics.AGENT_HELP_REQUESTED]: AgentHelpRequestedPayloadSchema,\n    [EventTopics.AGENT_HELP_CLAIMED]: AgentHelpClaimedPayloadSchema,\n    [EventTopics.AGENT_HELP_RESOLVED]: AgentHelpResolvedPayloadSchema,\n    [EventTopics.AGENT_BUDDY_PAIRED]: AgentBuddyPairedPayloadSchema,\n    [EventTopics.AGENT_HEARTBEAT]: AgentHeartbeatPayloadSchema,\n    [EventTopics.METRICS_TICK]: MetricsTickPayloadSchema,\n    [EventTopics.ALERT_INFO]: AlertInfoPayloadSchema,\n    [EventTopics.ALERT_WARNING]: AlertWarningPayloadSchema,\n    [EventTopics.ALERT_ERROR]: AlertErrorPayloadSchema,\n    [EventTopics.CONDUCTOR_PLAN_UPDATED]: ConductorPlanUpdatedPayloadSchema,\n    [EventTopics.CODE_DIFF_PROPOSED]: CodeDiffProposedPayloadSchema,\n    [EventTopics.CODE_REVIEW_COMPLETED]: CodeReviewCompletedPayloadSchema,\n    [EventTopics.UI_THEME_CHANGED]: UIThemeChangedPayloadSchema,\n    [EventTopics.UI_WIDGET_MOUNTED]: UIWidgetMountedPayloadSchema,\n    [EventTopics.UI_WIDGET_UNMOUNTED]: UIWidgetUnmountedPayloadSchema,\n    [EventTopics.UI_LAYOUT_RESIZED]: UILayoutResizedPayloadSchema,\n    [EventTopics.UI_ROUTE_CHANGED]: UIRouteChangedPayloadSchema,\n    [EventTopics.UI_MODAL_OPENED]: UIModalOpenedPayloadSchema,\n    [EventTopics.UI_MODAL_CLOSED]: UIModalClosedPayloadSchema,\n    [EventTopics.UI_NOTIFICATION_SHOWN]: UINotificationShownPayloadSchema,\n    [EventTopics.UI_ERROR_DISPLAYED]: UIErrorDisplayedPayloadSchema,\n  };\n\n  const schema = schemaMap[topic];\n  if (!schema) {\n    throw new Error(`No schema found for topic: ${topic}`);\n  }\n\n  return schema.parse(payload) as EventPayloadMap[T];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/env.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Environment variable validation using Zod\n * @owner Jerry (AI Conductor)\n */\n\nimport { z } from 'zod';\n\n// ============================================================================\n// Environment Schema\n// ============================================================================\n\nexport const EnvSchema = z.object({\n  // Node environment\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\n\n  // Application\n  NEXT_PUBLIC_APP_URL: z.string().url().optional(),\n  PORT: z.coerce.number().default(3000),\n\n  // Event Bus Transport\n  EVENT_BUS_MODE: z.enum(['nats', 'redis', 'gitops', 'test']).default('gitops'),\n  NATS_URL: z.string().url().optional(),\n  REDIS_URL: z.string().url().optional(),\n  EVENT_BUS_AGENT_NAME: z.string().optional(),\n\n  // Database\n  DATABASE_URL: z.string().url().optional(),\n\n  // S3 Storage\n  S3_BUCKET: z.string().optional(),\n  S3_REGION: z.string().default('us-east-1'),\n  S3_ACCESS_KEY: z.string().optional(),\n  S3_SECRET_KEY: z.string().optional(),\n\n  // AI Services\n  ANTHROPIC_API_KEY: z.string().optional(),\n  OPENAI_API_KEY: z.string().optional(),\n\n  // Audio Services\n  ELEVENLABS_API_KEY: z.string().optional(),\n\n  // Authentication\n  NEXTAUTH_SECRET: z.string().optional(),\n  NEXTAUTH_URL: z.string().url().optional(),\n\n  // Feature Flags\n  ENABLE_VOICE_INTERFACE: z.coerce.boolean().default(false),\n  ENABLE_METRICS_COLLECTION: z.coerce.boolean().default(true),\n  ENABLE_AGENT_COORDINATION: z.coerce.boolean().default(true),\n\n  // Monitoring\n  SENTRY_DSN: z.string().url().optional(),\n  SENTRY_ENVIRONMENT: z.string().optional(),\n  LOG_LEVEL: z.enum(['debug', 'info', 'warn', 'error']).default('info'),\n});\n\nexport type Env = z.infer<typeof EnvSchema>;\n\n// ============================================================================\n// Validation Function\n// ============================================================================\n\nlet cachedEnv: Env | null = null;\n\nexport function validateEnv(): Env {\n  if (cachedEnv) {\n    return cachedEnv;\n  }\n\n  try {\n    cachedEnv = EnvSchema.parse(process.env);\n    return cachedEnv;\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const formattedErrors = error.issues.map((err) => {\n        return `  - ${err.path.join('.')}: ${err.message}`;\n      });\n\n      throw new Error(\n        `Environment validation failed:\\n${formattedErrors.join('\\n')}`\n      );\n    }\n    throw error;\n  }\n}\n\n// ============================================================================\n// Runtime Environment Checks\n// ============================================================================\n\nexport function requireEnvVar(key: keyof Env, customMessage?: string): string {\n  const env = validateEnv();\n  const value = env[key];\n\n  if (value === undefined || value === null || value === '') {\n    throw new Error(\n      customMessage || `Required environment variable ${key} is not set`\n    );\n  }\n\n  return String(value);\n}\n\nexport function getEnvVar(key: keyof Env, fallback?: string): string | undefined {\n  const env = validateEnv();\n  const value = env[key];\n  return value !== undefined && value !== null ? String(value) : fallback;\n}\n\n// ============================================================================\n// Environment Type Guards\n// ============================================================================\n\nexport function isProduction(): boolean {\n  return validateEnv().NODE_ENV === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return validateEnv().NODE_ENV === 'development';\n}\n\nexport function isTest(): boolean {\n  return validateEnv().NODE_ENV === 'test';\n}\n\n// ============================================================================\n// Event Bus Config Helpers\n// ============================================================================\n\nexport function getEventBusConfig() {\n  const env = validateEnv();\n\n  return {\n    mode: env.EVENT_BUS_MODE,\n    natsUrl: env.NATS_URL,\n    redisUrl: env.REDIS_URL,\n    agentName: env.EVENT_BUS_AGENT_NAME || 'unknown-agent',\n  };\n}\n\n// ============================================================================\n// Database Config Helpers\n// ============================================================================\n\nexport function getDatabaseConfig() {\n  const env = validateEnv();\n\n  if (!env.DATABASE_URL) {\n    throw new Error('DATABASE_URL is required for database operations');\n  }\n\n  return {\n    url: env.DATABASE_URL,\n  };\n}\n\n// ============================================================================\n// S3 Config Helpers\n// ============================================================================\n\nexport function getS3Config() {\n  const env = validateEnv();\n\n  if (!env.S3_BUCKET || !env.S3_ACCESS_KEY || !env.S3_SECRET_KEY) {\n    throw new Error('S3_BUCKET, S3_ACCESS_KEY, and S3_SECRET_KEY are required for S3 operations');\n  }\n\n  return {\n    bucket: env.S3_BUCKET,\n    region: env.S3_REGION,\n    accessKeyId: env.S3_ACCESS_KEY,\n    secretAccessKey: env.S3_SECRET_KEY,\n  };\n}\n\n// ============================================================================\n// AI Services Config Helpers\n// ============================================================================\n\nexport function getAnthropicConfig() {\n  const env = validateEnv();\n\n  if (!env.ANTHROPIC_API_KEY) {\n    throw new Error('ANTHROPIC_API_KEY is required for Claude API operations');\n  }\n\n  return {\n    apiKey: env.ANTHROPIC_API_KEY,\n  };\n}\n\nexport function getOpenAIConfig() {\n  const env = validateEnv();\n\n  if (!env.OPENAI_API_KEY) {\n    throw new Error('OPENAI_API_KEY is required for OpenAI operations');\n  }\n\n  return {\n    apiKey: env.OPENAI_API_KEY,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/packages/types/src/index.ts"],"sourcesContent":["/**\n * @package @dawg-ai/types\n * @description Single source of truth for DAWG AI types\n * @owner Jerry (AI Conductor)\n */\n\n// Event types and schemas\nexport * from './events';\n\n// Environment validation\nexport * from './env';\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED,0BAA0B;;AAC1B;AAEA,yBAAyB;AACzB","debugId":null}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file:///Users/benkennon/dawg-ai/app/api/health/route.ts"],"sourcesContent":["/**\n * Health Check Endpoint\n * Returns system status for monitoring and CI/CD\n */\n\nimport { NextResponse } from 'next/server';\nimport { validateEnv } from '@dawg-ai/types';\n\nexport const dynamic = 'force-dynamic';\n\ninterface HealthStatus {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: string;\n  uptime: number;\n  environment: string;\n  checks: {\n    database: 'ok' | 'error' | 'skip';\n    eventBus: 'ok' | 'error' | 'skip';\n    storage: 'ok' | 'error' | 'skip';\n    ai: 'ok' | 'error' | 'skip';\n  };\n  version: string;\n}\n\nexport async function GET() {\n  const startTime = Date.now();\n\n  try {\n    // Validate environment\n    const env = validateEnv();\n\n    // Initialize health status\n    const health: HealthStatus = {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      environment: String(env.NODE_ENV),\n      checks: {\n        database: 'skip',\n        eventBus: 'skip',\n        storage: 'skip',\n        ai: 'skip',\n      },\n      version: process.env.npm_package_version || '1.0.0',\n    };\n\n    // Check database connection (if DATABASE_URL exists)\n    if (env.DATABASE_URL) {\n      try {\n        const { PrismaClient } = await import('@prisma/client');\n        const prisma = new PrismaClient();\n        await prisma.$queryRaw`SELECT 1`;\n        await prisma.$disconnect();\n        health.checks.database = 'ok';\n      } catch (error) {\n        console.error('[Health] Database check failed:', error);\n        health.checks.database = 'error';\n        health.status = 'degraded';\n      }\n    }\n\n    // Check event bus (if configured)\n    if (env.EVENT_BUS_MODE === 'nats' && env.NATS_URL) {\n      try {\n        // Basic connectivity check (don't actually connect for health check)\n        health.checks.eventBus = 'ok';\n      } catch (error) {\n        console.error('[Health] Event bus check failed:', error);\n        health.checks.eventBus = 'error';\n        health.status = 'degraded';\n      }\n    } else if (env.EVENT_BUS_MODE === 'redis' && env.REDIS_URL) {\n      health.checks.eventBus = 'ok';\n    } else {\n      health.checks.eventBus = 'skip';\n    }\n\n    // Check S3 storage (if configured)\n    if (env.S3_BUCKET && env.S3_ACCESS_KEY && env.S3_SECRET_KEY) {\n      health.checks.storage = 'ok';\n    }\n\n    // Check AI services (if API keys exist)\n    if (env.ANTHROPIC_API_KEY || env.OPENAI_API_KEY) {\n      health.checks.ai = 'ok';\n    }\n\n    const responseTime = Date.now() - startTime;\n\n    return NextResponse.json(\n      {\n        ...health,\n        meta: {\n          responseTimeMs: responseTime,\n          nodeVersion: process.version,\n        },\n      },\n      {\n        status: health.status === 'healthy' ? 200 : 503,\n        headers: {\n          'Cache-Control': 'no-store, must-revalidate',\n          'X-Response-Time': `${responseTime}ms`,\n        },\n      }\n    );\n  } catch (error) {\n    console.error('[Health] Health check failed:', error);\n\n    return NextResponse.json(\n      {\n        status: 'unhealthy',\n        timestamp: new Date().toISOString(),\n        error: error instanceof Error ? error.message : 'Unknown error',\n        uptime: process.uptime(),\n      },\n      {\n        status: 503,\n        headers: {\n          'Cache-Control': 'no-store, must-revalidate',\n        },\n      }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAED;AACA;AAAA;;;AAEO,MAAM,UAAU;AAgBhB,eAAe;IACpB,MAAM,YAAY,KAAK,GAAG;IAE1B,IAAI;QACF,uBAAuB;QACvB,MAAM,MAAM,IAAA,8JAAW;QAEvB,2BAA2B;QAC3B,MAAM,SAAuB;YAC3B,QAAQ;YACR,WAAW,IAAI,OAAO,WAAW;YACjC,QAAQ,QAAQ,MAAM;YACtB,aAAa,OAAO,IAAI,QAAQ;YAChC,QAAQ;gBACN,UAAU;gBACV,UAAU;gBACV,SAAS;gBACT,IAAI;YACN;YACA,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;QAC9C;QAEA,qDAAqD;QACrD,IAAI,IAAI,YAAY,EAAE;YACpB,IAAI;gBACF,MAAM,EAAE,YAAY,EAAE,GAAG;gBACzB,MAAM,SAAS,IAAI;gBACnB,MAAM,OAAO,SAAS,CAAC,QAAQ,CAAC;gBAChC,MAAM,OAAO,WAAW;gBACxB,OAAO,MAAM,CAAC,QAAQ,GAAG;YAC3B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,OAAO,MAAM,CAAC,QAAQ,GAAG;gBACzB,OAAO,MAAM,GAAG;YAClB;QACF;QAEA,kCAAkC;QAClC,IAAI,IAAI,cAAc,KAAK,UAAU,IAAI,QAAQ,EAAE;YACjD,IAAI;gBACF,qEAAqE;gBACrE,OAAO,MAAM,CAAC,QAAQ,GAAG;YAC3B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,oCAAoC;gBAClD,OAAO,MAAM,CAAC,QAAQ,GAAG;gBACzB,OAAO,MAAM,GAAG;YAClB;QACF,OAAO,IAAI,IAAI,cAAc,KAAK,WAAW,IAAI,SAAS,EAAE;YAC1D,OAAO,MAAM,CAAC,QAAQ,GAAG;QAC3B,OAAO;YACL,OAAO,MAAM,CAAC,QAAQ,GAAG;QAC3B;QAEA,mCAAmC;QACnC,IAAI,IAAI,SAAS,IAAI,IAAI,aAAa,IAAI,IAAI,aAAa,EAAE;YAC3D,OAAO,MAAM,CAAC,OAAO,GAAG;QAC1B;QAEA,wCAAwC;QACxC,IAAI,IAAI,iBAAiB,IAAI,IAAI,cAAc,EAAE;YAC/C,OAAO,MAAM,CAAC,EAAE,GAAG;QACrB;QAEA,MAAM,eAAe,KAAK,GAAG,KAAK;QAElC,OAAO,8JAAY,CAAC,IAAI,CACtB;YACE,GAAG,MAAM;YACT,MAAM;gBACJ,gBAAgB;gBAChB,aAAa,QAAQ,OAAO;YAC9B;QACF,GACA;YACE,QAAQ,OAAO,MAAM,KAAK,YAAY,MAAM;YAC5C,SAAS;gBACP,iBAAiB;gBACjB,mBAAmB,GAAG,aAAa,EAAE,CAAC;YACxC;QACF;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAE/C,OAAO,8JAAY,CAAC,IAAI,CACtB;YACE,QAAQ;YACR,WAAW,IAAI,OAAO,WAAW;YACjC,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,QAAQ,QAAQ,MAAM;QACxB,GACA;YACE,QAAQ;YACR,SAAS;gBACP,iBAAiB;YACnB;QACF;IAEJ;AACF","debugId":null}}]
}