// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/agent-dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agent-dashboard">> = Specific
  const handler = {} as typeof import("../../app/agent-dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/command-center/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/command-center">> = Specific
  const handler = {} as typeof import("../../app/command-center/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/demo/tracks/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/demo/tracks">> = Specific
  const handler = {} as typeof import("../../app/demo/tracks/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/demo/transport/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/demo/transport">> = Specific
  const handler = {} as typeof import("../../app/demo/transport/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/journey/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/journey">> = Specific
  const handler = {} as typeof import("../../app/journey/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/tasks-dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/tasks-dashboard">> = Specific
  const handler = {} as typeof import("../../app/tasks-dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/type-errors-dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/type-errors-dashboard">> = Specific
  const handler = {} as typeof import("../../app/type-errors-dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ui-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ui-demo">> = Specific
  const handler = {} as typeof import("../../app/ui-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/voice-chat/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/voice-chat">> = Specific
  const handler = {} as typeof import("../../app/voice-chat/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/workspace/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/workspace">> = Specific
  const handler = {} as typeof import("../../app/workspace/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agent-status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agent-status">> = Specific
  const handler = {} as typeof import("../../app/api/agent-status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/consent/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics/consent">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/consent/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/telemetry/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics/telemetry">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/telemetry/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/audio/delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/audio/delete">> = Specific
  const handler = {} as typeof import("../../app/api/audio/delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/audio/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/audio/upload">> = Specific
  const handler = {} as typeof import("../../app/api/audio/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/audio/url/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/audio/url">> = Specific
  const handler = {} as typeof import("../../app/api/audio/url/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chat-mock/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chat-mock">> = Specific
  const handler = {} as typeof import("../../app/api/chat-mock/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chat-openai/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chat-openai">> = Specific
  const handler = {} as typeof import("../../app/api/chat-openai/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chat">> = Specific
  const handler = {} as typeof import("../../app/api/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/command-center/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/command-center">> = Specific
  const handler = {} as typeof import("../../app/api/command-center/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/dashboard/state/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/dashboard/state">> = Specific
  const handler = {} as typeof import("../../app/api/dashboard/state/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/events/publish/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/events/publish">> = Specific
  const handler = {} as typeof import("../../app/api/events/publish/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/events/read/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/events/read">> = Specific
  const handler = {} as typeof import("../../app/api/events/read/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/generate/music/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/generate/music">> = Specific
  const handler = {} as typeof import("../../app/api/generate/music/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/layouts/[layoutId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/layouts/[layoutId]">> = Specific
  const handler = {} as typeof import("../../app/api/layouts/[layoutId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/layouts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/layouts">> = Specific
  const handler = {} as typeof import("../../app/api/layouts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/milestones/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/milestones">> = Specific
  const handler = {} as typeof import("../../app/api/milestones/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/milestones/streak/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/milestones/streak">> = Specific
  const handler = {} as typeof import("../../app/api/milestones/streak/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/delete">> = Specific
  const handler = {} as typeof import("../../app/api/profile/delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/export/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/export">> = Specific
  const handler = {} as typeof import("../../app/api/profile/export/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile">> = Specific
  const handler = {} as typeof import("../../app/api/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/session">> = Specific
  const handler = {} as typeof import("../../app/api/profile/session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/signals/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/signals">> = Specific
  const handler = {} as typeof import("../../app/api/profile/signals/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/skills/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/skills">> = Specific
  const handler = {} as typeof import("../../app/api/profile/skills/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/projects/delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/delete">> = Specific
  const handler = {} as typeof import("../../app/api/projects/delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/projects/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/list">> = Specific
  const handler = {} as typeof import("../../app/api/projects/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/projects/load/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/load">> = Specific
  const handler = {} as typeof import("../../app/api/projects/load/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/projects/save/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/save">> = Specific
  const handler = {} as typeof import("../../app/api/projects/save/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/tasks/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/tasks">> = Specific
  const handler = {} as typeof import("../../app/api/tasks/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/team-chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/team-chat">> = Specific
  const handler = {} as typeof import("../../app/api/team-chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/type-errors/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/type-errors">> = Specific
  const handler = {} as typeof import("../../app/api/type-errors/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/user/preferences/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/preferences">> = Specific
  const handler = {} as typeof import("../../app/api/user/preferences/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/user/profile/avatar/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/profile/avatar">> = Specific
  const handler = {} as typeof import("../../app/api/user/profile/avatar/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/user/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/profile">> = Specific
  const handler = {} as typeof import("../../app/api/user/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice-bridge/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice-bridge">> = Specific
  const handler = {} as typeof import("../../app/api/voice-bridge/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice-chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice-chat">> = Specific
  const handler = {} as typeof import("../../app/api/voice-chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice/clone/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice/clone">> = Specific
  const handler = {} as typeof import("../../app/api/voice/clone/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/voice/harmony/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/voice/harmony">> = Specific
  const handler = {} as typeof import("../../app/api/voice/harmony/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/workspace/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/workspace">> = Specific
  const handler = {} as typeof import("../../app/workspace/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
